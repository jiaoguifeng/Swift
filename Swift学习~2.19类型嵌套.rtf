{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww22620\viewh18160\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs36 \cf0 \CocoaLigature0 2.19 
\f1 \'c0\'e0\'d0\'cd\'c7\'b6\'cc\'d7\'d1\'a7\'cf\'b0\'b1\'ca\'bc\'c7
\f0 \
\
import Foundation\
\
/* 
\f1 \'c0\'e0\'d0\'cd\'c7\'b6\'cc\'d7
\f0  */\
\
/*\

\f1 \'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'b3\'a3\'b1\'bb\'d3\'c3\'d3\'da\'ca\'b5\'cf\'d6\'cc\'d8\'b6\'a8\'c0\'e0\'bb\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4\'b9\'a6\'c4\'dc\'a1\'a3\'cd\'ac\'d1\'f9\'b5\'c4\'a3\'ac\'d2\'b2\'c4\'dc\'b9\'bb\'d4\'da\'d3\'d0\'b6\'e0\'d6\'d6\'b1\'e4\'c1\'bf\'c0\'e0\'d0\'cd\'b5\'c4\'bb\'b7\'be\'b3\'d6\'d0\'b7\'bd\'b1\'e3\'b5\'c4\'b6\'a8\'d2\'e5\'cd\'a8\'d3\'c3\'c0\'e0\'bb\'f2\'bd\'e1\'b9\'b9\'cc\'e5\'a1\'a3\'ce\'aa\'c1\'cb\'ca\'b5\'cf\'d6\'d5\'e2\'b8\'f6\'b9\'a6\'c4\'dc\'a3\'ac
\f0 Swift
\f1 \'d4\'ca\'d0\'ed\'c4\'e3\'b6\'a8\'d2\'e5\'c0\'e0\'d0\'cd\'c7\'b6\'cc\'d7\'a3\'ac\'bf\'c9\'d2\'d4\'d4\'da\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'a1\'a2\'c0\'e0\'ba\'cd\'bd\'e1\'b9\'b9\'cc\'e5\'d6\'d0\'b6\'a8\'d2\'e5\'d6\'a7\'b3\'d6\'c7\'b6\'cc\'d7\'b5\'c4\'c0\'e0\'d0\'cd\'a1\'a3
\f0 \
\

\f1 \'d2\'aa\'d4\'da\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'d6\'d0\'c7\'b6\'cc\'d7\'c1\'ed\'d2\'bb\'b8\'f6\'c0\'e0\'d0\'cd\'a3\'ac\'bd\'ab\'d0\'e8\'d2\'aa\'c7\'b6\'cc\'d7\'b5\'c4\'c0\'e0\'d0\'cd\'b5\'c4\'b6\'a8\'d2\'e5\'d0\'b4\'d4\'da\'b1\'bb\'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd\'b5\'c4\'c7\'f8\'d3\'f2
\f0 \{\}
\f1 \'c4\'da\'a3\'ac\'b6\'f8\'c7\'d2\'bf\'c9\'d2\'d4\'b8\'f9\'be\'dd\'d0\'e8\'d2\'aa\'b6\'a8\'d2\'e5\'b6\'e0\'bc\'b6\'c7\'b6\'cc\'d7
\f0 \
*/\
\
//
\f1 \'c0\'e0\'d0\'cd\'c7\'b6\'cc\'d7\'ca\'b5\'c0\'fd
\f0 \
struct BlackjackCard\
\{\
    enum Suit: Character\
    \{\
        case Spades = "H", Hearts = "S", Diamonds = "F", Clubs = "M"\
    \}\
    \
    enum Rank: Int\
    \{\
        case Two = 2, Three, Four, Five, Six, Seven, Eight, Night, Ten\
        case Jack, Queen, King, Ace\
        \
        struct Values\
        \{\
            let first: Int, second: Int?\
        \}\
        \
        var values: Values\
        \{\
            switch self\
            \{\
                case .Ace:\
                    return Values(first: 1, second: 11)\
                case .Jack, .Queen, .King:\
                    return Values(first: 10, second: nil)\
                default:\
                    return Values(first: self.rawValue, second: nil)\
            \}\
        \}\
    \}\
    \
    let rank: Rank, suit: Suit\
    var description: String\
        \{\
            var output = "suit is \\(suit.rawValue),"\
            output += "value is \\(rank.values.first)"\
            if let second = rank.values.second\
            \{\
                output += " or \\(second)"\
            \}\
            \
            return output\
        \}\
\}\
\
\
let theAceOfSpades = BlackjackCard(rank: .Ace, suit: .Spades)\
println("theAceOfSpades: \\(theAceOfSpades.description)")\
\
//
\f1 \'c0\'e0\'d0\'cd\'c7\'b6\'cc\'d7\'b5\'c4\'d2\'fd\'d3\'c3
\f0 \
/*\

\f1 \'d4\'da\'cd\'e2\'b2\'bf\'b6\'d4\'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd\'b5\'c4\'d2\'fd\'d3\'c3\'a3\'ac\'ca\'c7\'d2\'d4\'b1\'bb\'c7\'b6\'cc\'d7\'c0\'e0\'d0\'cd\'b5\'c4\'c3\'fb\'d7\'d6\'ce\'aa\'c7\'b0\'d7\'ba\'a3\'ac\'bc\'d3\'c9\'cf\'cb\'f9\'d2\'aa\'d2\'fd\'d3\'c3\'b5\'c4\'ca\'f4\'d0\'d4\'c3\'fb\'a3\'ba
\f0 \
*/\
let heartsSymbol = BlackjackCard.Suit.Hearts.rawValue\
\
\
\
}