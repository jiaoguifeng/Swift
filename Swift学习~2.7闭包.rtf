{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww22620\viewh18160\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs36 \cf0 \CocoaLigature0 2.7 
\f1 \'b1\'d5\'b0\'fc\'d1\'a7\'cf\'b0\'b1\'ca\'bc\'c7
\f0 \
\
import Foundation\
\
/* 
\f1 \'b1\'d5\'b0\'fc
\f0  */\
  //
\f1 \'b1\'d5\'b0\'fc\'ca\'c7\'b9\'a6\'c4\'dc\'d0\'d4\'d7\'d4\'b0\'fc\'ba\'ac\'c4\'a3\'bf\'e9\'a3\'ac\'bf\'c9\'d2\'d4\'d4\'da\'b4\'fa\'c2\'eb\'d6\'d0\'b1\'bb\'b4\'ab\'b5\'dd\'ba\'cd\'ca\'b9\'d3\'c3\'a1\'a3
\f0 Swift
\f1 \'d6\'d0\'b5\'c4\'b1\'d5\'b0\'fc\'d3\'eb
\f0 C
\f1 \'ba\'cd
\f0 objective-c
\f1 \'d6\'d0\'b5\'c4
\f0 block
\f1 \'d2\'d4\'bc\'b0\'c6\'e4\'cb\'fb\'d2\'bb\'d0\'a9\'b1\'e0\'b3\'cc\'d3\'ef\'d1\'d4\'d6\'d0\'b5\'c4
\f0 lambdas
\f1 \'b1\'c8\'bd\'cf\'c0\'e0\'cb\'c6
\f0 \
  //
\f1 \'b1\'d5\'b0\'fc\'bf\'c9\'d2\'d4\'b2\'b6\'bb\'f1\'ba\'cd\'b4\'e6\'b4\'a2\'c6\'e4\'cb\'f9\'d4\'da\'c9\'cf\'cf\'c2\'ce\'c4\'d6\'d0\'c8\'ce\'d2\'e2\'b3\'a3\'c1\'bf\'ba\'cd\'b1\'e4\'c1\'bf\'b5\'c4\'d2\'fd\'d3\'c3\'a1\'a3\'d5\'e2\'be\'cd\'ca\'c7\'cb\'f9\'ce\'bd\'b5\'c4\'b1\'d5\'b0\'fc\'b2\'a2\'b0\'fc\'b9\'fc\'d7\'c5\'d5\'e2\'d0\'a9\'b3\'a3\'c1\'bf\'ba\'cd\'b1\'e4\'c1\'bf\'a3\'ac\'cb\'d7\'b3\'c6\'b1\'d5\'b0\'fc\'a1\'a3
\f0 \
/*\

\f1 \'d4\'da
\f0  
\f1 \'ba\'af\'ca\'fd
\f0  
\f1 \'d5\'c2\'bd\'da\'d6\'d0\'bd\'e9\'c9\'dc\'b5\'c4\'c8\'ab\'be\'d6\'ba\'cd\'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'ca\'b5\'bc\'ca\'c9\'cf\'d2\'b2\'ca\'c7\'cc\'d8\'ca\'e2\'b5\'c4\'b1\'d5\'b0\'fc\'a3\'ac\'b1\'d5\'b0\'fc\'b2\'c9\'c8\'a1\'c8\'e7\'cf\'c2\'c8\'fd\'d6\'d6\'d0\'ce\'ca\'bd\'d6\'ae\'d2\'bb\'a3\'ba
\f0 \
1.
\f1 \'c8\'ab\'be\'d6\'ba\'af\'ca\'fd\'ca\'c7\'d2\'bb\'b8\'f6\'d3\'d0\'c3\'fb\'d7\'d6\'b5\'ab\'ca\'c7\'b2\'bb\'bb\'e1\'b2\'b6\'bb\'f1\'c8\'ce\'ba\'ce\'d6\'b5\'b5\'c4\'b1\'d5\'b0\'fc
\f0 \
2.
\f1 \'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'ca\'c7\'d2\'bb\'b8\'f6\'d3\'d0\'c3\'fb\'d7\'d6\'b2\'a2\'c7\'d2\'bf\'c9\'d2\'d4\'b2\'b6\'bb\'f1\'c6\'e4\'b7\'e2\'b1\'d5\'ba\'af\'ca\'fd\'c7\'f8\'d3\'f2\'c4\'da\'d6\'b5\'b5\'c4\'b1\'d5\'b0\'fc
\f0 \
3.
\f1 \'b1\'d5\'b0\'fc\'b1\'ed\'b4\'ef\'ca\'bd\'ca\'c7\'d2\'bb\'b8\'f6\'c0\'fb\'d3\'c3\'c7\'e1\'c1\'bf\'bc\'b6\'d3\'ef\'b7\'a8\'cb\'f9\'d0\'b4\'b5\'c4\'bf\'c9\'d2\'d4\'b2\'b6\'bb\'f1\'c6\'e4\'c9\'cf\'cf\'c2\'ce\'c4\'d6\'d0\'b1\'e4\'c1\'bf\'ba\'cd\'b3\'a3\'c1\'bf\'d6\'b5\'b5\'c4\'c3\'bb\'d3\'d0\'c3\'fb\'d7\'d6\'b5\'c4\'b1\'d5\'b0\'fc
\f0 \
*/\
\
//sort
\f1 \'ba\'af\'ca\'fd
\f0  \
   //Swift
\f1 \'b1\'ea\'d7\'bc\'bf\'e2\'cc\'e1\'b9\'a9\'c1\'cb
\f0 sort
\f1 \'ba\'af\'ca\'fd\'a3\'ac\'bb\'e1\'b8\'f9\'be\'dd\'c4\'fa\'cc\'e1\'b9\'a9\'b5\'c4\'c5\'c5\'d0\'f2\'b1\'d5\'b0\'fc\'bd\'ab\'d2\'d1\'d6\'aa\'c0\'e0\'d0\'cd\'ca\'fd\'d7\'e9\'d6\'d0\'b5\'c4\'d6\'b5\'bd\'f8\'d0\'d0\'c5\'c5\'d0\'f2\'a1\'a3\'d2\'bb\'b5\'a9\'c5\'c5\'d0\'f2\'cd\'ea\'b3\'c9\'a3\'ac\'ba\'af\'ca\'fd\'bb\'e1\'b7\'b5\'bb\'d8\'d2\'bb\'b8\'f6\'d3\'eb\'d4\'ad\'ca\'fd\'d7\'e9\'b4\'f3\'d0\'a1\'cf\'e0\'cd\'ac\'b5\'c4\'ca\'fd\'d7\'e9\'a3\'ac\'b8\'c3\'ca\'fd\'d7\'e9\'d6\'d0\'b0\'fc\'ba\'ac\'d2\'d1\'be\'ad\'d5\'fd\'c8\'b7\'c5\'c5\'d0\'f2\'b5\'c4\'cd\'ac\'c0\'e0\'d0\'cd\'d4\'aa\'cb\'d8\'a1\'a3
\f0 \
let names = ["Chris","Alex","Ewa","Barry","Daniella"]\
func backwards(s1 : String,s2 : String) -> Bool\
\{\
    return s1 > s2\
\}\
\
var reversed = sorted(names,backwards) //
\f1 \'d7\'ee\'d0\'c2\'b9\'d9\'b7\'bd\'ce\'c4\'b5\'b5\'d2\'d1\'d0\'de\'b8\'c4\'a3\'ac\'be\'c9\'b0\'e6\'a3\'ba
\f0 var reversed = sort(names,backwards)
\f1 \'a3\'ac\'b1\'e0\'d2\'eb\'b4\'ed\'ce\'f3\'a3\'ac\'ce\'de\'b7\'a8\'ca\'b6\'b1\'f0
\f0 sort
\f1 \'ba\'af\'ca\'fd
\f0 \
\
reversed = sorted(names,\{(s1:String,s2:String) -> Bool in return s1 > s2\})\
\
reversed = sorted(names,\{s1,s2 in return s1 > s2\})\
\
//reversed = sorted(names,\{s1,s2 in s1 > s2\}) //
\f1 \'b1\'e0\'d2\'eb\'d3\'d0\'ce\'ca\'cc\'e2
\f0 \
\
//reversed = sorted(names,\{$0 > $1\}) //
\f1 \'b1\'e0\'d2\'eb\'d3\'d0\'ce\'ca\'cc\'e2
\f0 \
\
reversed = sorted(names, >)\
\
//Trailing
\f1 \'b1\'d5\'b0\'fc
\f0 \
/*\

\f1 \'c8\'e7\'b9\'fb\'c4\'fa\'d0\'e8\'d2\'aa\'bd\'ab\'d2\'bb\'b8\'f6\'ba\'dc\'b3\'a4\'b5\'c4\'b1\'d5\'b0\'fc\'b1\'ed\'b4\'ef\'ca\'bd\'d7\'f7\'ce\'aa\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'b4\'ab\'b5\'dd\'b8\'f8\'ba\'af\'ca\'fd\'a3\'ac\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3
\f0 Trailing
\f1 \'b1\'d5\'b0\'fc\'c0\'b4\'d4\'f6\'bc\'d3\'ba\'af\'ca\'fd\'b5\'c4\'bf\'c9\'b6\'c1\'d0\'d4\'a1\'a3
\f0 \
Trailing
\f1 \'b1\'d5\'b0\'fc\'ca\'c7\'d2\'bb\'b8\'f6\'ca\'e9\'d0\'b4\'d4\'da\'ba\'af\'ca\'fd\'c0\'a8\'ba\'c5\'d6\'ae\'cd\'e2
\f0 (
\f1 \'d6\'ae\'ba\'f3
\f0 )
\f1 \'b5\'c4\'b1\'d5\'b0\'fc\'b1\'ed\'b4\'ef\'ca\'bd\'a3\'ac\'ba\'af\'ca\'fd\'d6\'a7\'b3\'d6\'bd\'ab\'c6\'e4\'d7\'f7\'ce\'aa\'d7\'ee\'ba\'f3\'d2\'bb\'b8\'f6\'b2\'ce\'ca\'fd\'b5\'f7\'d3\'c3\'a1\'a3
\f0 \
*/\
\
func someFunctionThatTakesAClosure(closure:() -> ())\
\{\
    //
\f1 \'ba\'af\'ca\'fd\'cc\'e5\'b2\'bf\'b7\'d6
\f0 \
\}\
\
someFunctionThatTakesAClosure(\{/*
\f1 \'b1\'d5\'b0\'fc\'d6\'f7\'cc\'e5\'b2\'bf\'b7\'d6
\f0 */\})\
\
let digitNames = [0:"Zero",1:"One",2:"Two",3:"Three",4:"Four",5:"Five",6:"Six",7:"Seven",8:"Eight",9:"Nine"]\
let numbers = [16,58,510]\
\
let strings = numbers.map\{\
    (var number) -> String in\
    var output = ""\
    while number > 0\
    \{\
        output = digitNames[number % 10]! + output\
        number /= 10\
    \}\
    \
    println(output)\
    return output\
\}\
\
//
\f1 \'b2\'b6\'bb\'f1
\f0 (Capture)\
/*\

\f1 \'b1\'d5\'b0\'fc\'bf\'c9\'d2\'d4\'d4\'da\'c6\'e4\'b6\'a8\'d2\'e5\'b5\'c4\'c9\'cf\'cf\'c2\'ce\'c4\'d6\'d0\'b2\'b6\'bb\'f1\'b3\'a3\'c1\'bf\'ba\'cd\'b1\'e4\'c1\'bf\'a1\'a3\'bc\'b4\'ca\'b9\'b6\'a8\'d2\'e5\'d5\'e2\'d0\'a9\'b3\'a3\'c1\'bf\'ba\'c7\'ba\'c7\'b1\'e4\'c1\'bf\'b5\'c4\'d4\'ad\'d7\'f7\'d3\'c3\'d3\'f2\'d2\'d1\'be\'ad\'b2\'bb\'b4\'e6\'d4\'da\'a3\'ac\'b1\'d5\'b0\'fc\'c8\'d4\'c8\'bb\'bf\'c9\'d2\'d4\'d4\'da\'b1\'d5\'b0\'fc\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'d2\'fd\'d3\'c3\'ba\'cd\'d0\'de\'b8\'c4\'d5\'e2\'d0\'a9\'d6\'b5\'a1\'a3
\f0 \
Swift
\f1 \'d7\'ee\'bc\'f2\'b5\'a5\'b5\'c4\'b1\'d5\'b0\'fc\'d0\'ce\'ca\'bd\'ca\'c7\'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'a3\'ac\'d2\'b2\'be\'cd\'ca\'c7\'b6\'a8\'d2\'e5\'d4\'da\'c6\'e4\'cb\'fb\'ba\'af\'ca\'fd\'cc\'e5\'c4\'da\'b5\'c4\'ba\'af\'ca\'fd\'a1\'a3\'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'b2\'b6\'bb\'f1\'c6\'e4\'cd\'e2\'b2\'bf\'ba\'af\'ca\'fd\'cb\'f9\'d3\'d0\'b5\'c4\'b2\'ce\'ca\'fd\'d2\'d4\'bc\'b0\'b6\'a8\'d2\'e5\'b5\'c4\'b3\'a3\'c1\'bf\'ba\'cd\'b1\'e4\'c1\'bf\'a1\'a3
\f0 \
*/\
/*\

\f1 \'cf\'c2\'c0\'fd\'ce\'aa\'d2\'bb\'b8\'f6\'bd\'d0\'d7\'f6
\f0 makeIncrementor
\f1 \'b5\'c4\'ba\'af\'ca\'fd\'a3\'ac\'c6\'e4\'b0\'fc\'ba\'ac\'c1\'cb\'d2\'bb\'b8\'f6\'bd\'d0\'d7\'f6
\f0 incrementor
\f1 \'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd\'a1\'a3\'c7\'b6\'cc\'d7\'ba\'af\'ca\'fd
\f0 incrementor
\f1 \'b4\'d3\'c9\'cf\'cf\'c2\'ce\'c4\'b2\'b6\'bb\'f1\'c1\'bd\'b8\'f6\'d6\'b5\'a3\'ac
\f0 runingTotal
\f1 \'ba\'cd
\f0 amount
\f1 \'a1\'a3\'d6\'ae\'ba\'f3
\f0 makeIncrementor
\f1 \'bd\'ab
\f0 incrementor
\f1 \'d7\'f7\'ce\'aa\'b1\'d5\'b0\'fc\'b7\'b5\'bb\'d8\'a1\'a3\'c3\'bf\'b4\'ce\'b5\'f7\'d3\'c3
\f0 incrementor
\f1 \'ca\'b1\'a3\'ac\'b6\'bc\'bb\'e1\'d2\'d4
\f0 amount
\f1 \'d7\'f7\'ce\'aa\'d4\'f6\'c1\'bf\'d4\'f6\'bc\'d3
\f0 runningTotal
\f1 \'b5\'c4\'d6\'b5
\f0 \
*/\
func makeIncrementor(forIncrement amount:Int) -> ()-> Int\
\{\
    var runningTotal = 0\
    \
    func incrementor() -> Int\
    \{\
        runningTotal += amount\
        return runningTotal\
    \}\
    \
    return incrementor\
\}\
\
let incrementByTen = makeIncrementor(forIncrement: 10)\
var total = incrementByTen()\
println(total)\
\
total = incrementByTen()\
println(total)\
\
total = incrementByTen()\
println(total)\
\
//
\f1 \'c8\'e7\'b9\'fb\'c4\'fa\'b4\'b4\'bd\'a8\'c1\'cb\'c1\'ed\'d2\'bb\'b8\'f6
\f0 incrementor
\f1 \'a3\'ac\'c6\'e4\'bb\'e1\'d3\'d0\'d2\'bb\'b8\'f6\'ca\'f4\'d3\'da\'d7\'d4\'bc\'ba\'b5\'c4\'b6\'c0\'c1\'a2\'b5\'c4
\f0 runningTotal
\f1 \'b1\'e4\'c1\'bf\'b5\'c4\'d2\'fd\'d3\'c3\'a1\'a3\'cf\'c2\'c3\'e6\'d5\'e2\'b8\'f6\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 incrementBySeven
\f1 \'b2\'b6\'bb\'f1\'c1\'cb\'d2\'bb\'b8\'f6\'d0\'c2\'b5\'c4
\f0 runningTotal
\f1 \'b1\'e4\'c1\'bf\'a3\'ac\'b8\'c3\'b1\'e4\'c1\'bf\'ba\'cd
\f0 incrementByTen
\f1 \'d6\'d0\'b2\'b6\'bb\'f1\'b5\'c4\'b1\'e4\'c1\'bf\'c3\'bb\'d3\'d0\'c8\'ce\'ba\'ce\'c1\'aa\'cf\'b5\'a3\'ba
\f0 \
let incrementorBySeven = makeIncrementor(forIncrement: 7)\
var sevenTotal = incrementorBySeven()\
total = incrementByTen()\
println(sevenTotal)\
println(total)\
\
//
\f1 \'b1\'d5\'b0\'fc\'ca\'c7\'d2\'fd\'d3\'c3\'c0\'e0\'d0\'cd
\f0 \
//
\f1 \'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'a3\'ac
\f0 incrementByTen
\f1 \'ba\'cd
\f0 incrementorBySeven
\f1 \'ca\'c7\'b3\'a3\'c1\'bf\'a3\'ac\'b5\'ab\'ca\'c7\'d5\'e2\'d0\'a9\'b3\'a3\'c1\'bf\'d6\'b8\'cf\'f2\'b5\'c4\'b1\'d5\'b0\'fc\'c8\'d4\'c8\'bb\'bf\'c9\'d2\'d4\'d4\'f6\'bc\'d3\'c6\'e4\'b2\'b6\'bb\'f1\'b5\'c4\'b1\'e4\'c1\'bf\'d6\'b5\'a3\'ac\'d5\'e2\'ca\'c7\'d2\'f2\'ce\'aa\'ba\'af\'ca\'fd\'ba\'cd\'b1\'d5\'b0\'fc\'b6\'bc\'ca\'c7\'d2\'fd\'d3\'c3\'c0\'e0\'d0\'cd\'a1\'a3\'ce\'de\'c2\'db\'c4\'fa\'bd\'ab\'ba\'af\'ca\'fd
\f0 /
\f1 \'b1\'d5\'b0\'fc\'b8\'b3\'d6\'b5\'b8\'f8\'d2\'bb\'b8\'f6\'b3\'a3\'c1\'bf\'bb\'b9\'ca\'c7\'b1\'e4\'c1\'bf\'a3\'ac\'c4\'fa\'ca\'b5\'bc\'ca\'c9\'cf\'b6\'bc\'ca\'c7\'bd\'ab\'b3\'a3\'c1\'bf
\f0 /
\f1 \'b1\'e4\'c1\'bf\'b5\'c4\'d6\'b5\'c9\'e8\'d6\'c3\'ce\'aa\'b6\'d4\'d3\'a6\'ba\'af\'ca\'fd
\f0 /
\f1 \'b1\'d5\'b0\'fc\'b5\'c4\'d2\'fd\'d3\'c3\'a3\'ac\'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'a3\'ac
\f0 incrementorBySeven
\f1 \'d6\'b8\'cf\'f2\'b1\'d5\'b0\'fc\'b5\'c4\'d2\'fd\'d3\'c3\'ca\'c7\'d2\'bb\'b8\'f6\'b3\'a3\'c1\'bf\'a3\'ac\'b6\'f8\'b7\'c7\'b1\'d5\'b0\'fc\'c4\'da\'c8\'dd\'b1\'be\'c9\'ed\'a1\'a3
\f0 \
//
\f1 \'d5\'e2\'d2\'b2\'d2\'e2\'ce\'b6\'d7\'c5\'c8\'e7\'b9\'fb\'c4\'fa\'bd\'ab\'b1\'d5\'b0\'fc\'b8\'b3\'d6\'b5\'b8\'f8\'c1\'cb\'c1\'ac\'b8\'f6\'b2\'bb\'cd\'ac\'b5\'c4\'b3\'a3\'c1\'bf
\f0 /
\f1 \'b1\'e4\'c1\'bf\'a3\'ac\'c1\'bd\'b8\'f6\'d6\'b5\'b6\'bc\'bb\'e1\'d6\'b8\'cf\'f2\'cd\'ac\'d2\'bb\'b8\'f6\'b1\'d5\'b0\'fc\'a3\'ba
\f0 \
let alsoIncrementByTen = incrementByTen\
var x = alsoIncrementByTen()\
println(x)\
\
}