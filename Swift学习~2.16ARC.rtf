{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww22620\viewh18160\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs36 \cf0 \CocoaLigature0 2.16 
\f1 ARC\'d1\'a7\'cf\'b0\'b1\'ca\'bc\'c7
\f0 \
\
import Foundation\
\
/* 
\f1 \'d7\'d4\'b6\'af\'d2\'fd\'d3\'c3\'bc\'c6\'ca\'fd
\f0  */\
/*\
Swift
\f1 \'ca\'b9\'d3\'c3\'d7\'d4\'b6\'af\'d2\'fd\'d3\'c3\'bc\'c6\'ca\'fd
\f0 (ARC)
\f1 \'c0\'b4\'b8\'fa\'d7\'d9\'b2\'a2\'b9\'dc\'c0\'ed\'d3\'a6\'d3\'c3\'ca\'b9\'d3\'c3\'b5\'c4\'c4\'da\'b4\'e6\'a1\'a3\'b4\'f3\'b2\'bf\'b7\'d6\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'d5\'e2\'d2\'e2\'ce\'b6\'d7\'c5\'d4\'da
\f0 Swift
\f1 \'d3\'ef\'d1\'d4\'d6\'d0\'a3\'ac\'c4\'da\'b4\'e6\'b9\'dc\'c0\'ed
\f0 \'93
\f1 \'c8\'d4\'c8\'bb\'b9\'a4\'d7\'f7
\f0 \'94
\f1 \'a3\'ac\'b2\'bb\'d0\'e8\'d2\'aa\'d7\'d4\'bc\'ba\'c8\'a5\'bf\'bc\'c2\'c7\'c4\'da\'b4\'e6\'b9\'dc\'c0\'ed\'b5\'c4\'ca\'c2\'c7\'e9\'a1\'a3\'b5\'b1\'ca\'b5\'c0\'fd\'b2\'bb\'d4\'da\'b1\'bb\'ca\'b9\'d3\'c3\'ca\'b1\'a3\'ac
\f0 ARC
\f1 \'bb\'e1\'d7\'d4\'b6\'af\'ca\'cd\'b7\'c5\'d5\'e2\'d0\'a9\'c0\'e0\'b5\'c4\'ca\'b5\'c0\'fd\'cb\'f9\'d5\'bc\'d3\'c3\'b5\'c4\'c4\'da\'b4\'e6\'a1\'a3
\f0 \

\f1 \'c8\'bb\'ba\'f3\'a3\'ac\'d4\'da\'c9\'d9\'ca\'fd\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'ce\'aa\'c1\'cb\'d7\'d4\'b6\'af\'b5\'c4\'b9\'dc\'c0\'ed\'c4\'da\'b4\'e6\'bf\'d5\'bc\'e4\'a3\'ac
\f0 ARC
\f1 \'d0\'e8\'d2\'aa\'c1\'cb\'bd\'e2\'b9\'d8\'d3\'da\'c4\'e3\'b5\'c4\'b4\'fa\'c2\'eb\'c6\'ac\'b6\'ce\'d6\'ae\'bc\'e4\'b9\'d8\'cf\'b5\'b5\'c4\'b8\'fc\'b6\'e0\'d0\'c5\'cf\'a2\'a1\'a3\'b1\'be\'d5\'c2\'c3\'e8\'ca\'f6\'c1\'cb\'d5\'e2\'d0\'a9\'c7\'e9\'bf\'f6\'a3\'ac\'b2\'a2\'cf\'f2\'b4\'f3\'bc\'d2\'d5\'b9\'ca\'be\'c8\'e7\'ba\'ce\'b4\'f2\'bf\'aa
\f0 ARC
\f1 \'c0\'b4\'b9\'dc\'c0\'ed\'d3\'a6\'d3\'c3\'b5\'c4\'cb\'f9\'d3\'d0\'c4\'da\'b4\'e6\'bf\'d5\'bc\'e4\'a1\'a3
\f0 \

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'d2\'fd\'d3\'c3\'bc\'c6\'ca\'fd\'d6\'b5\'d3\'a6\'d3\'c3\'d4\'da\'c0\'e0\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3\'bd\'e1\'b9\'b9\'cc\'e5
\f0 (structure)
\f1 \'ba\'cd\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'ca\'c7\'d6\'b5\'c0\'e0\'d0\'cd\'a3\'ac\'b2\'a2\'b7\'c7\'d2\'fd\'d3\'c3\'c0\'e0\'d0\'cd\'a3\'ac\'b2\'bb\'ca\'c7\'d2\'d4\'d2\'fd\'d3\'c3\'b5\'c4\'b7\'bd\'ca\'bd\'c0\'b4\'b4\'e6\'b4\'a2\'ba\'cd\'b4\'ab\'b5\'dd\'b5\'c4\'a1\'a3
\f0 \
*/\
\
//ARC
\f1 \'c8\'e7\'ba\'ce\'b9\'a4\'d7\'f7
\f0 \
class Person\
\{\
    let name: String\
    init(name: String)\
    \{\
        self.name = name\
        println("\\(name) is being initialized")\
    \}\
    \
    deinit\
    \{\
        println("\\(name) is being deinitialized")\
    \}\
\}\
\
var reference1: Person?\
var reference2: Person?\
var reference3: Person?\
\
reference1 = Person(name: "John Appleseed")\
\
reference2 = reference1\
reference3 = reference2\
\
reference1 = nil\
reference2 = nil\
reference3 = nil\
\
//
\f1 \'c0\'e0\'ca\'b5\'c0\'fd\'bc\'e4\'b5\'c4\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7
\f0 \
/*\
  
\f1 \'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'d6\'d0\'a3\'ac
\f0 ARC
\f1 \'bf\'c9\'d2\'d4\'d7\'b7\'d7\'d9
\f0 Person
\f1 \'ca\'b5\'c0\'fd\'b5\'c4\'d2\'fd\'d3\'c3\'ca\'fd\'c1\'bf\'a3\'ac\'b2\'a2\'c7\'d2\'d4\'da\'cb\'fc\'b2\'bb\'d4\'da\'b1\'bb\'ca\'b9\'d3\'c3\'ca\'b1\'b4\'dd\'bb\'d9\'d5\'e2\'b8\'f6\'ca\'b5\'c0\'fd\'a1\'a3
\f0 \
\
  
\f1 \'c8\'bb\'b6\'f8\'a3\'ac\'ce\'d2\'c3\'c7\'d3\'d0\'bf\'c9\'c4\'dc\'bb\'e1\'d0\'b4\'b3\'f6\'d5\'e2\'d1\'f9\'b5\'c4\'b4\'fa\'c2\'eb\'a3\'ac\'d2\'bb\'b8\'f6\'c0\'e0\'b5\'c4\'ca\'b5\'c0\'fd\'d3\'c0\'d4\'b6\'b2\'bb\'bb\'e1\'d3\'d0
\f0 0
\f1 \'b8\'f6\'c7\'bf\'d2\'fd\'d3\'c3\'a1\'a3\'d4\'da\'c1\'bd\'b8\'f6\'c0\'e0\'ca\'b5\'c0\'fd\'b1\'cb\'b4\'cb\'b1\'a3\'b3\'d6\'b6\'d4\'b7\'bd\'b5\'c4\'c7\'bf\'d2\'fd\'d3\'c3\'a3\'ac\'ca\'b9\'b5\'c3\'c3\'bf\'b8\'f6\'ca\'b5\'c0\'fd\'b6\'bc\'ca\'b9\'b6\'d4\'b7\'bd\'b1\'a3\'b3\'d6\'d3\'d0\'d0\'a7\'ca\'b1\'bb\'e1\'b7\'a2\'c9\'fa\'d5\'e2\'d6\'d6\'c7\'e9\'bf\'f6\'a1\'a3\'ce\'d2\'c3\'c7\'b3\'c6\'d6\'ae\'ce\'aa\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a1\'a3
\f0 \
\
  
\f1 \'cd\'a8\'b9\'fd\'d3\'c3\'c8\'f4\'d2\'fd\'d3\'c3\'bb\'f2\'d5\'df\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'c0\'b4\'c8\'a1\'b4\'fa\'c7\'bf\'d2\'fd\'d3\'c3\'a3\'ac\'ce\'d2\'c3\'c7\'bf\'c9\'d2\'d4\'bd\'e2\'be\'f6\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'ce\'ca\'cc\'e2\'a1\'a3
\f0 \
\
  
\f1 \'cf\'c2\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'d5\'b9\'ca\'be\'c1\'cb\'d2\'bb\'b8\'f6\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'ca\'c7\'c8\'e7\'ba\'ce\'d4\'da\'b2\'bb\'be\'ad\'d2\'e2\'bc\'e4\'b2\'fa\'c9\'fa\'b5\'c4\'a1\'a3
\f0 \
*/\
\
class Person1\
\{\
    let name: String\
    init(name: String)\
    \{\
        self.name = name\
        println("\\(name) is being initialized")\
    \}\
    \
    var apartment: Apartment?\
    \
    deinit\
    \{\
        println("\\(name) is being deinitialized")\
    \}\
\
\}\
\
class Apartment\
\{\
    let number: Int\
    init(number: Int)\
    \{\
        self.number = number\
        println("\\(number) is being initialized")\
    \}\
    \
    weak var tenant: Person1?  //
\f1 \'d2\'fd\'c6\'f0\'d2\'fd\'d3\'c3\'bb\'b7\'b5\'c4\'ca\'c7\'a3\'ba
\f0 var tenant: Person1?\
    \
    deinit\
    \{\
        println("Apartment #\\(number) is being deinitialized")\
    \}\
\}\
\
var john: Person1?\
var number73: Apartment?\
\
john = Person1(name: "John Appleseed")\
number73 = Apartment(number: 73)\
\
john!.apartment = number73\
number73!.tenant = john\
\
john = nil\
number73 = nil\
\
/*\

\f1 \'d7\'a2\'d2\'e2\'a3\'bb\'b5\'b1\'c9\'cf\'c3\'e6\'c1\'bd\'b8\'f6\'b1\'e4\'c1\'bf\'b8\'b3\'d6\'b5\'ce\'aa
\f0 nil
\f1 \'ca\'b1\'a3\'ac\'c3\'bb\'d3\'d0\'b5\'f7\'d3\'c3\'c8\'ce\'ba\'ce\'d2\'bb\'b8\'f6
\f0 deinitializer
\f1 \'a1\'a3\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'d7\'e8\'d6\'b9\'c1\'cb
\f0 Person
\f1 \'ba\'cd
\f0 Apartment
\f1 \'ca\'b5\'c0\'fd\'b5\'c4\'cf\'fa\'bb\'d9\'a3\'ac\'bd\'f8\'d2\'bb\'b2\'bd\'b5\'bc\'d6\'c2\'c4\'da\'b4\'e6\'d0\'b9\'c2\'b6\'a1\'a3
\f0 \
*/\
\
\
//
\f1 \'bd\'e2\'be\'f6\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7
\f0 \
/*\
Swift
\f1 \'cc\'e1\'b9\'a9\'c1\'bd\'d6\'d6\'b7\'bd\'b7\'a8\'bd\'e2\'be\'f6\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a3\'ba\'c8\'f5\'d2\'fd\'d3\'c3\'ba\'cd\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3
\f0 \
\

\f1 \'c8\'f5\'d2\'fd\'d3\'c3\'ba\'cd\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'d4\'ca\'d0\'ed\'d2\'fd\'d3\'c3\'bb\'b7\'d6\'d0\'b5\'c4\'d2\'bb\'b8\'f6\'ca\'b5\'c0\'fd\'d2\'fd\'d3\'c3\'c1\'ed\'d2\'bb\'b8\'f6\'ca\'b5\'c0\'fd\'a3\'ac\'b5\'ab\'b2\'bb\'ca\'c7\'c7\'bf\'d2\'fd\'d3\'c3\'a1\'a3\'d2\'f2\'b4\'cb\'ca\'b5\'c0\'fd\'bf\'c9\'d2\'d4\'cf\'e0\'bb\'a5\'d2\'fd\'d3\'c3\'b5\'ab\'ca\'c7\'b2\'bb\'bb\'e1\'b2\'fa\'c9\'fa\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a1\'a3
\f0 \
\

\f1 \'b6\'d4\'d3\'da\'c9\'f9\'c3\'f7\'d6\'dc\'c6\'da\'d6\'d0\'d2\'fd\'d3\'c3\'bb\'e1\'b1\'e4\'ce\'aa
\f0 nil
\f1 \'b5\'c4\'ca\'b5\'c0\'fd\'a3\'ac\'ca\'b9\'d3\'c3\'c8\'f5\'d2\'fd\'d3\'c3\'a3\'ac\'b6\'d4\'d3\'da\'b3\'f5\'ca\'bc\'bb\'af\'ca\'b1\'b8\'b3\'d6\'b5\'d6\'ae\'ba\'f3\'d2\'fd\'c6\'f0\'d4\'d9\'d2\'b2\'b2\'bb\'bb\'e1\'b8\'b3\'d6\'b5\'ce\'aa
\f0 nil
\f1 \'b5\'c4\'ca\'b5\'c0\'fd\'a3\'ac\'ca\'b9\'d3\'c3\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'a1\'a3
\f0 \
\
**
\f1 \'c8\'f5\'d2\'fd\'d3\'c3
\f0 **
\f1 \'a3\'ba
\f0 \

\f1 \'c8\'f5\'d2\'fd\'d3\'c3\'b2\'bb\'bb\'e1\'d4\'f6\'bc\'d3\'ca\'b5\'c0\'fd\'b5\'c4\'d2\'fd\'d3\'c3\'bc\'c6\'ca\'fd\'a3\'ac\'d2\'f2\'b4\'cb\'b2\'bb\'bb\'e1\'d7\'e8\'d6\'b9
\f0 ARC
\f1 \'cf\'fa\'bb\'d9\'b1\'bb\'d2\'fd\'d3\'c3\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3\'d5\'e2\'d6\'d6\'cc\'d8\'d0\'d4\'ca\'b9\'b5\'c3\'d2\'fd\'d3\'c3\'b2\'bb\'bb\'e1\'b1\'e4\'b3\'c9\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a1\'a3\'c9\'f9\'c3\'f7\'ca\'f4\'d0\'d4\'bb\'f2\'d5\'df\'b1\'e4\'c1\'bf\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'b9\'d8\'bc\'fc\'d7\'d6
\f0 weak
\f1 \'b1\'ed\'c3\'f7\'d2\'fd\'d3\'c3\'ce\'aa\'c8\'f5\'d2\'fd\'d3\'c3
\f0 \
\

\f1 \'d4\'da\'ca\'b5\'c0\'fd\'b5\'c4\'c9\'fa\'c3\'fc\'d6\'dc\'c6\'da\'d6\'d0\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'b3\'d0\'a9\'ca\'b1\'ba\'f2\'c3\'bb\'d3\'d0\'d2\'fd\'d3\'c3\'d6\'b5\'a3\'ac\'c4\'c7\'c3\'b4\'c8\'f5\'d2\'fd\'d3\'c3\'bf\'c9\'d2\'d4\'d7\'e8\'d6\'b9\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a1\'a3
\f0 \

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'c8\'f5\'d2\'fd\'d3\'c3\'d6\'bb\'c4\'dc\'c9\'f9\'c3\'f7\'ce\'aa\'b1\'e4\'c1\'bf\'c0\'e0\'d0\'cd\'a3\'ac\'d2\'f2\'ce\'aa\'d4\'cb\'d0\'d0\'ca\'b1\'cb\'fc\'b5\'c4\'d6\'b5\'bf\'c9\'c4\'dc\'b8\'c3\'b1\'ed\'a1\'a3\'c8\'f5\'d2\'fd\'d3\'c3\'be\'f8\'b6\'d4\'b2\'bb\'c4\'dc\'c9\'f9\'c3\'f7\'ce\'aa\'b3\'a3\'c1\'bf\'a1\'a3
\f0 \

\f1 \'d2\'f2\'ce\'aa\'c8\'f5\'d2\'fd\'d3\'c3\'bf\'c9\'d2\'d4\'c3\'bb\'d3\'d0\'d6\'b5\'a3\'ac\'cb\'f9\'d2\'d4\'c9\'f9\'c3\'f7\'c8\'f5\'d2\'fd\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'b1\'d8\'d0\'eb\'ca\'c7\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'b5\'c4\'a1\'a3\'d4\'da
\f0 Swift
\f1 \'d3\'ef\'d1\'d4\'d6\'d0\'a3\'ac\'cd\'c6\'bc\'f6\'d3\'c3\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'c0\'b4\'d7\'f7\'ce\'aa\'bf\'c9\'c4\'dc\'c3\'bb\'d3\'d0\'d6\'b5\'b5\'c4\'d2\'fd\'d3\'c3\'b5\'c4\'c0\'e0\'d0\'cd
\f0 \
\

\f1 \'d6\'b1\'bd\'d3\'d4\'da\'c9\'cf\'c3\'e6\'b5\'c4\'c0\'fd\'d7\'d3\'d0\'de\'b8\'c4
\f0 \
\
**
\f1 \'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3
\f0 **\

\f1 \'ba\'cd\'c8\'f5\'d2\'fd\'d3\'c3\'cf\'e0\'cb\'c6\'a3\'ac\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'d2\'b2\'b2\'bb\'c7\'bf\'b3\'d6\'d3\'d0\'ca\'b5\'c0\'fd\'a1\'a3\'b5\'ab\'ca\'c7\'ba\'cd\'c8\'f5\'d2\'fd\'d3\'c3\'b2\'bb\'cd\'ac\'b5\'c4\'ca\'c7\'a3\'ac\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'c4\'ac\'c8\'cf\'ca\'bc\'d6\'d5\'d3\'d0\'d6\'b5\'a1\'a3\'d2\'f2\'b4\'cb\'a3\'ac\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'d6\'bb\'c4\'dc\'b6\'a8\'d2\'e5\'ce\'aa\'b7\'c7\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd
\f0 (non-optionaltype)
\f1 \'a1\'a3\'d4\'da\'ca\'f4\'d0\'d4\'a1\'a2\'b1\'e4\'c1\'bf\'c7\'b0\'cc\'ed\'bc\'d3
\f0 unowned
\f1 \'b9\'d8\'bc\'fc\'d7\'d6\'a3\'ac\'bf\'c9\'d2\'d4\'c9\'f9\'c3\'f7\'d2\'bb\'b8\'f6\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'a1\'a3
\f0 \
\

\f1 \'d2\'f2\'ce\'aa\'ca\'c7\'b7\'c7\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'a3\'ac\'d2\'f2\'b4\'cb\'b5\'b1\'ca\'b9\'d3\'c3\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'b2\'bb\'d0\'e8\'d2\'aa\'d5\'b9\'bf\'aa\'a3\'ac\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'b7\'c3\'ce\'ca\'a1\'a3\'b2\'bb\'b9\'fd\'b7\'c7\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'b1\'e4\'c1\'bf\'b2\'bb\'c4\'dc\'b8\'b3\'d6\'b5\'ce\'aa
\f0 nil
\f1 \'a3\'ac\'d2\'f2\'b4\'cb\'b5\'b1\'ca\'b5\'c0\'fd\'b1\'bb\'cf\'fa\'bb\'d9\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac
\f0 ARC
\f1 \'ce\'de\'b7\'a8\'bd\'ab\'d2\'fd\'d3\'c3\'b8\'b3\'d6\'b5\'ce\'aa
\f0 nil\

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'b5\'b1\'ca\'b5\'c0\'fd\'b1\'bb\'cf\'fa\'bb\'d9\'ba\'f3\'a3\'ac\'ca\'d4\'cd\'bc\'b7\'c3\'ce\'ca\'b8\'c3\'ca\'b5\'c0\'fd\'b5\'c4\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'bb\'e1\'b4\'a5\'b7\'a2\'d4\'cb\'d0\'d0\'ca\'b1\'b4\'ed\'ce\'f3\'a1\'a3\'ca\'b9\'d3\'c3\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'ca\'b1\'c7\'eb\'c8\'b7\'b1\'a3\'d2\'fd\'d3\'c3\'ca\'bc\'d6\'d5\'d6\'b8\'cf\'f2\'d2\'bb\'b8\'f6\'ce\'b4\'cf\'fa\'bb\'d9\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3\'c9\'cf\'c3\'e6\'b5\'c4\'b7\'c7\'b7\'a8\'b2\'d9\'d7\'f7\'bb\'e1\'b0\'d9\'b7\'d6\'b0\'d9\'c8\'c3\'d3\'a6\'d3\'c3\'b1\'c0\'c0\'a3\'a3\'ac\'b2\'bb\'bb\'e1\'b7\'a2\'c9\'fa\'ce\'de\'b7\'a8\'d4\'a4\'c6\'da\'b5\'c4\'d0\'d0\'ce\'aa\'a1\'a3\'d2\'f2\'b4\'cb\'a3\'ac\'c4\'e3\'d3\'a6\'b8\'c3\'b1\'dc\'c3\'e2\'d5\'e2\'d6\'d6\'c7\'e9\'bf\'f6\'a1\'a3
\f0 \
*/\
\
//
\f1 \'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'ca\'b5\'c0\'fd
\f0 \
class Customer\
\{\
    let name: String\
    var card: CreditCard?\
    \
    init(name: String)\
    \{\
        self.name = name\
    \}\
    \
    deinit\
    \{\
        println("\\(name) is being deinitialized")\
    \}\
\}\
\
class CreditCard\
\{\
    let number: Int\
    unowned let customer: Customer\
    init(number: Int,customer: Customer)\
    \{\
        self.number = number\
        self.customer = customer\
    \}\
    \
    deinit\
    \{\
        println("Card #\\(number) is being deinitialized")\
    \}\
\}\
\
var jiao: Customer?\
jiao = Customer(name: "jiaoguifeng")\
jiao!.card = CreditCard(number: 1234_5678_9012_3456, customer: jiao!)\
\
jiao = nil\
\
//
\f1 \'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'d2\'d4\'bc\'b0\'d2\'fe\'ca\'bd\'d5\'b9\'bf\'aa\'b5\'c4\'bf\'c9\'d1\'a1\'ca\'f4\'d0\'d4
\f0 \
/*\
Person
\f1 \'ba\'cd
\f0 Apartment
\f1 \'b5\'c4\'c0\'fd\'d7\'d3\'cb\'b5\'c3\'f7\'c1\'cb\'cf\'c2\'c3\'e6\'b5\'c4\'b3\'a1\'be\'b0\'a3\'ba\'c1\'bd\'b8\'f6\'ca\'f4\'d0\'d4\'b6\'bc\'d3\'d0\'bf\'c9\'c4\'dc\'ca\'c7
\f0 nil
\f1 \'a3\'ac\'b2\'a2\'d3\'d0\'bf\'c9\'c4\'dc\'b2\'fa\'c9\'fa\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a3\'ac\'d5\'e2\'d6\'d6\'b3\'a1\'be\'b0\'cf\'c2\'ca\'ca\'ba\'cf\'ca\'b9\'d3\'c3\'c8\'f5\'d2\'fd\'d3\'c3\'a1\'a3
\f0 \
\
Customer
\f1 \'ba\'cd
\f0 CreditCard
\f1 \'b5\'c4\'c0\'fd\'d7\'d3\'cb\'b5\'c3\'f7\'c1\'cb\'c1\'ed\'cd\'e2\'b5\'c4\'b3\'a1\'be\'b0\'a3\'ba\'d2\'bb\'b8\'f6\'ca\'f4\'d3\'da
\f0 nil
\f1 \'a3\'ac\'c1\'ed\'cd\'e2\'d2\'bb\'b8\'f6\'ca\'f4\'d0\'d4\'b2\'bb\'d4\'ca\'d0\'ed\'ca\'c7
\f0 nil
\f1 \'a3\'ac\'b2\'a2\'d3\'d0\'bf\'c9\'c4\'dc\'b2\'fa\'c9\'fa\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'a1\'a3\'d5\'e2\'d1\'f9\'b5\'c4\'b3\'a1\'be\'b0\'ca\'ca\'ba\'cf\'ca\'b9\'d3\'c3\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'a1\'a3
\f0 \
\

\f1 \'b5\'ab\'ca\'c7\'a3\'ac\'b4\'e6\'d4\'da\'b5\'da\'c8\'fd\'d6\'d6\'b3\'a1\'be\'b0\'a3\'ba\'c1\'bd\'b8\'f6\'ca\'f4\'d0\'d4\'b6\'bc\'b1\'d8\'d0\'eb\'d3\'d0\'d6\'b5\'a3\'ac\'c7\'d2\'b3\'f5\'ca\'bc\'bb\'af\'cd\'ea\'b3\'c9\'ba\'f3\'b2\'bb\'c4\'dc\'ce\'aa
\f0 nil
\f1 \'a1\'a3\'d5\'e2\'d6\'d6\'b3\'a1\'be\'b0\'cf\'c2\'a3\'ac\'d4\'f2\'d2\'aa\'d2\'bb\'b8\'f6\'c0\'e0\'d3\'c3\'ce\'de\'d6\'f7\'d2\'fd\'d3\'c3\'ca\'f4\'d0\'d4\'a3\'ac\'c1\'ed\'d2\'bb\'b8\'f6\'c0\'e0\'d3\'c3\'d2\'fe\'ca\'bd\'d5\'b9\'bf\'aa\'b5\'c4\'bf\'c9\'d1\'a1\'ca\'f4\'d0\'d4\'a1\'a3
\f0 \
*/\
\
class Country\
\{\
    let name: String\
    let capitalCity: City!   //
\f1 \'c9\'f9\'c3\'f7
\f0 Country
\f1 \'b5\'c4
\f0 capitalCity
\f1 \'ca\'f4\'d0\'d4\'ce\'aa\'d2\'fe\'ca\'bd\'d5\'b9\'bf\'aa\'b5\'c4\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'ca\'f4\'d0\'d4\'a1\'a3\'d2\'b2\'be\'cd\'ca\'c7\'cb\'b5\'a3\'ac
\f0 capitalCity
\f1 \'ca\'f4\'d0\'d4\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'ca\'c7
\f0 nil
\f1 \'a3\'ac\'b2\'bb\'d0\'e8\'d2\'aa\'d5\'b9\'bf\'aa\'cb\'fc\'b5\'c4\'d6\'b5\'be\'cd\'bf\'c9\'d2\'d4\'d6\'b1\'bd\'d3\'b7\'c3\'ce\'ca
\f0 \
    init(name: String, capitalName: String)\
    \{\
        self.name = name\
        self.capitalCity = City(name: capitalName, country: self)\
    \}\
\}\
\
class City\
\{\
    let name: String\
    unowned let country: Country\
    init(name: String, country: Country)\
    \{\
        self.name = name\
        self.country = country\
    \}\
\}\
\
//
\f1 \'d2\'f2\'ce\'aa
\f0 capitalCity
\f1 \'c4\'ac\'c8\'cf\'d6\'b5\'ce\'aa
\f0 nil
\f1 \'a3\'ac\'d2\'bb\'b5\'a9
\f0 Country
\f1 \'b5\'c4\'ca\'b5\'c0\'fd\'d4\'da\'b3\'f5\'ca\'bc\'bb\'af\'ca\'b1\'b8\'f8
\f0 name
\f1 \'b8\'b3\'d6\'b5\'ba\'f3\'a3\'ac\'d5\'fb\'b8\'f6\'b3\'f5\'ca\'bc\'bb\'af\'b9\'fd\'b3\'cc\'be\'cd\'cd\'ea\'b3\'c9\'c1\'cb\'a1\'a3\'d5\'e2\'b4\'fa\'b1\'ed\'d6\'bb\'d2\'aa\'b8\'b3\'d6\'b5
\f0 name
\f1 \'ca\'f4\'d0\'d4\'ba\'f3\'a3\'ac
\f0 Country
\f1 \'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\'ba\'af\'ca\'fd\'be\'cd\'c4\'dc\'d2\'fd\'d3\'c3\'b2\'a2\'b4\'ab\'b5\'dd\'d2\'fe\'ca\'bd\'b5\'c4
\f0 self
\f1 \'a1\'a3\'b5\'b1
\f0 Country
\f1 \'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\'ba\'af\'ca\'fd\'d4\'da\'b8\'b3\'d6\'b5
\f0 capitalCity
\f1 \'ca\'b1\'a3\'ac\'cb\'fc\'d2\'b2\'bf\'c9\'d2\'d4\'bd\'ab
\f0 self
\f1 \'d7\'f7\'ce\'aa\'b2\'ce\'ca\'fd\'b4\'ab\'b5\'dd\'b8\'f8
\f0 City
\f1 \'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\'ba\'af\'ca\'fd
\f0 \
\
var country = Country(name: "Canada", capitalName: "Ottawa")\
println("\\(country.name)'s captial city is called \\(country.capitalCity.name)")\
\
//
\f1 \'b1\'d5\'b0\'fc\'b2\'fa\'c9\'fa\'b5\'c4\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7
\f0 \
\
class HTMLElement\
\{\
    let name: String\
    let text: String?\
    \
    lazy var asHTML:() -> String = \{\
        \
        [unowned self] in           //
\f1 \'bd\'e2\'be\'f6\'b1\'d5\'b0\'fc\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'ce\'ca\'cc\'e2\'a3\'ac\'d2\'fd\'c6\'f0\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7\'ca\'b1\'c3\'bb\'d3\'d0\'d5\'e2\'d2\'bb\'be\'e4
\f0 \
        if let text = self.text\
        \{\
            return "<\\(self.name)>\\(text)</\\(self.name)>"\
        \}\
        else\
        \{\
            return "<\\(self.name)>"\
        \}\
    \}\
    \
    init(name: String, text: String? = nil)\
    \{\
        self.name = name\
        self.text = text\
    \}\
    \
    deinit\
    \{\
        println("\\(name) is being deinitialized")\
    \}\
\}\
\
var paragraph: HTMLElement? = HTMLElement(name: "p", text: "hello world")\
println(paragraph!.asHTML())\
\
paragraph = nil\
\
//
\f1 \'bd\'e2\'be\'f6\'b1\'d5\'b0\'fc\'b2\'fa\'c9\'fa\'b5\'c4\'c7\'bf\'d2\'fd\'d3\'c3\'bb\'b7
\f0 \
\
}