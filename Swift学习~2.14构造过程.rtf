{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset134 STHeitiSC-Light;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww22620\viewh18160\viewkind0
\deftab866
\pard\tx866\pardeftab866\pardirnatural

\f0\fs36 \cf0 \CocoaLigature0 2.14 
\f1 \'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d1\'a7\'cf\'b0\'b1\'ca\'bc\'c7
\f0 \
\
import Foundation\
\
/* 
\f1 \'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc
\f0  */\
/*\
    
\f1 \'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'ca\'c7\'ce\'aa\'c1\'cb\'ca\'b9\'d3\'c3\'c4\'b3\'d2\'bb\'b8\'f6\'c0\'e0\'a1\'a2\'bd\'e1\'b9\'b9\'cc\'e5\'bb\'f2\'d5\'df\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'b5\'c0\'fd\'b6\'f8\'bd\'f8\'d0\'d0\'b5\'c4\'d7\'bc\'b1\'b8\'b9\'fd\'b3\'cc\'a3\'ac\'d5\'e2\'b8\'f6\'b9\'fd\'b3\'cc\'b0\'fc\'c0\'a8\'c1\'cb\'ce\'aa\'ca\'b5\'c0\'fd\'d6\'d0\'b5\'c4\'c3\'bf\'d2\'bb\'b8\'f6\'ca\'f4\'d0\'d4\'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'d6\'b5\'ba\'cd\'ce\'aa\'c6\'e4\'d6\'b4\'d0\'d0\'b1\'d8\'d2\'aa\'b5\'c4\'d7\'bc\'b1\'b8\'ba\'cd\'b3\'f5\'ca\'bc\'bb\'af\'c8\'ce\'ce\'f1\'a1\'a3
\f0 \
    
\f1 \'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'ca\'c7\'cd\'a8\'b9\'fd\'b6\'a8\'d2\'e5\'b9\'b9\'d4\'ec\'c6\'f7
\f0 (initializers)
\f1 \'c0\'b4\'ca\'b5\'cf\'d6\'b5\'c4\'a3\'ac\'d5\'e2\'d6\'d6\'b9\'b9\'d4\'ec\'c6\'f7\'bf\'c9\'d2\'d4\'bf\'b4\'d7\'f6\'ca\'c7\'d3\'c3\'c0\'b4\'b4\'b4\'bd\'a8\'cc\'d8\'b6\'a8\'c0\'e0\'d0\'cd\'ca\'b5\'c0\'fd\'b5\'c4\'cc\'d8\'ca\'e2\'b7\'bd\'b7\'a8\'a1\'a3\'d3\'eb
\f0 objective-c
\f1 \'d6\'d0\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'b2\'bb\'cd\'ac\'a3\'ac
\f0 swift
\f1 \'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'ce\'de\'d0\'e8\'b7\'b5\'bb\'d8\'d6\'b5\'a3\'ac\'cb\'fb\'c3\'c7\'b5\'c4\'d6\'f7\'d2\'aa\'c8\'ce\'ce\'f1\'ca\'c7\'b1\'a3\'d6\'a4\'d0\'c2\'ca\'b5\'c0\'fd\'d4\'da\'b5\'da\'d2\'bb\'b4\'ce\'ca\'b9\'d3\'c3\'c7\'b0\'d5\'fd\'c8\'b7\'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af
\f0 \
    
\f1 \'c0\'e0\'ca\'b5\'c0\'fd\'d2\'b2\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'b6\'a8\'d2\'e5\'ce\'f6\'b9\'b9\'c6\'f7
\f0 (deinitializer)
\f1 \'d4\'da\'c0\'e0\'ca\'b5\'c0\'fd\'ca\'cd\'b7\'c5\'d6\'ae\'c7\'b0\'d6\'b4\'d0\'d0\'cc\'d8\'b6\'a8\'b5\'c4\'c7\'e5\'b3\'fd\'b9\'a4\'d7\'f7\'a1\'a3
\f0 \
*/\
\
//
\f1 \'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'b5\'c4\'b3\'f5\'ca\'bc\'b8\'b3\'d6\'b5
\f0 \
/*\
  
\f1 \'c0\'e0\'ba\'cd\'bd\'e1\'b9\'b9\'cc\'e5\'d4\'da\'ca\'b5\'c0\'fd\'b4\'b4\'bd\'a8\'ca\'b1\'a3\'ac\'b1\'d8\'d0\'eb\'ce\'aa\'cb\'f9\'d3\'d0\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'c9\'e8\'d6\'c3\'ba\'cf\'ca\'ca\'b5\'c4\'b3\'f5\'ca\'bc\'d6\'b5\'a1\'a3\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5\'b2\'bb\'c4\'dc\'b4\'a6\'d3\'da\'d2\'bb\'b8\'f6\'ce\'b4\'d6\'aa\'b5\'c4\'d7\'b4\'cc\'ac
\f0 \
  
\f1 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'d0\'ce\'aa\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'b8\'b3\'b3\'f5\'d6\'b5\'a3\'ac\'d2\'b2\'bf\'c9\'d2\'d4\'d4\'da\'b6\'a8\'d2\'e5\'ca\'f4\'d0\'d4\'b5\'c4\'ca\'b1\'ba\'f2\'ce\'aa\'c6\'e4\'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'d6\'b5\'a1\'a3
\f0 \
  
\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'b5\'b1\'c4\'e3\'ce\'aa\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'c9\'e8\'d6\'c3\'c4\'ac\'c8\'cf\'d6\'b5\'bb\'f2\'d5\'df\'d4\'da\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'d0\'ce\'aa\'c6\'e4\'b8\'b3\'d6\'b5\'ca\'b1\'a3\'ac\'cb\'fb\'c3\'c7\'b5\'c4\'d6\'b5\'ca\'c7\'b1\'bb\'d6\'b1\'bd\'d3\'c9\'e8\'d6\'c3\'b5\'c4\'a3\'ac\'b2\'bb\'bb\'e1\'b4\'a5\'b7\'a2\'c8\'ce\'ba\'ce\'ca\'f4\'d0\'d4\'b9\'db\'b2\'e2\'c6\'f7
\f0 (property observers)
\f1 \'a1\'a3
\f0 \
*/\
\
//
\f1 \'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
 //
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'d4\'da\'b4\'b4\'bd\'a8\'c4\'b3\'cc\'d8\'b6\'a8\'c0\'e0\'d0\'cd\'b5\'c4\'d0\'c2\'ca\'b5\'c0\'fd\'ca\'b1\'b5\'f7\'d3\'c3\'a3\'ac\'cb\'fc\'b5\'c4\'d7\'ee\'bc\'f2\'b5\'a5\'b5\'c4\'d0\'ce\'ca\'bd\'c0\'e0\'cb\'c6\'d3\'da\'d2\'bb\'b8\'f6\'b2\'bb\'b4\'f8\'c8\'ce\'ba\'ce\'b2\'ce\'ca\'fd\'b5\'c4\'ca\'b5\'c0\'fd\'b7\'bd\'b7\'a8\'a3\'ac\'d2\'d4\'b9\'d8\'bc\'fc\'d7\'d6
\f0 init
\f1 \'c3\'fc\'c3\'fb\'a1\'a3
\f0 \
\
struct Fahrenheit\
\{\
    var temperature: Double\
    init() //
\f1 \'d5\'e2\'b8\'f6\'bd\'e1\'b9\'b9\'cc\'e5\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'b2\'bb\'b4\'f8\'b2\'ce\'ca\'fd\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7
\f0 init
\f1 \'a3\'ac\'b2\'a2\'c7\'d2\'c0\'ef\'c3\'e6\'bd\'ab\'b4\'e6\'b4\'a2\'c6\'f7\'ca\'f4\'d0\'d4
\f0 temperature
\f1 \'b5\'c4\'d6\'b5\'b3\'f5\'ca\'bc\'bb\'af\'ce\'aa
\f0 32.0\
    \{\
        temperature = 32.0\
    \}\
\}\
\
var f = Fahrenheit()\
println("The default temperature is \\(f.temperature) Fahrenheit")\
\
//
\f1 \'b6\'a8\'d6\'c6\'bb\'af\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc
\f0 \
/*\

\f1 \'c4\'e3\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'ca\'e4\'c8\'eb\'b2\'ce\'ca\'fd\'ba\'cd\'bf\'c9\'d1\'a1\'ca\'f4\'d0\'d4\'c0\'e0\'d0\'cd\'c0\'b4\'b6\'a8\'d6\'c6\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'a3\'ac\'d2\'b2\'bf\'c9\'d2\'d4\'d4\'da\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'d0\'de\'b8\'c4\'b1\'e4\'c1\'bf\'ca\'f4\'d0\'d4
\f0 \
*/\
\
//
\f1 \'b9\'b9\'d4\'ec\'b2\'ce\'ca\'fd
\f0 \
struct Celsius\
\{\
    var temperatureInCelsius: Double = 0.0\
    init(fromFahrenheit fahrenheit: Double)\
    \{\
        temperatureInCelsius = (fahrenheit - 32.0) / 1.8\
    \}\
    \
    init(fromKelvin kelvin: Double)\
    \{\
        temperatureInCelsius = kelvin - 273.15\
    \}\
\}\
\
let boilingPointOfWater = Celsius(fromFahrenheit: 212.0)\
\
let freezingPointOfWater = Celsius(fromKelvin: 273.15)\
\
//
\f1 \'c4\'da\'b2\'bf\'ba\'cd\'cd\'e2\'b2\'bf\'b2\'ce\'ca\'fd\'c3\'fb
\f0 \
/*\

\f1 \'b8\'fa\'ba\'af\'ca\'fd\'ba\'cd\'b7\'bd\'b7\'a8\'b5\'c4\'b2\'ce\'ca\'fd\'cf\'e0\'cd\'ac\'a3\'ac\'b9\'b9\'d4\'ec\'b2\'ce\'ca\'fd\'d2\'b2\'b4\'e6\'d4\'da\'d2\'bb\'b8\'f6\'d4\'da\'b9\'b9\'d4\'ec\'c6\'f7\'c4\'da\'b2\'bf\'ca\'b9\'d3\'c3\'b5\'c4\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'ba\'cd\'d2\'bb\'b8\'f6\'d4\'da\'b5\'f7\'d3\'c3\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'b1\'ca\'b9\'d3\'c3\'b5\'c4\'cd\'e2\'b2\'bf\'b2\'ce\'ca\'fd\'c3\'fb\'b3\'c6\'a1\'a3
\f0 \

\f1 \'c8\'bb\'b6\'f8\'a3\'ac\'b9\'b9\'d4\'ec\'c6\'f7\'b2\'a2\'b2\'bb\'cf\'f1\'ba\'af\'ca\'fd\'ba\'cd\'b7\'bd\'b7\'a8\'c4\'c7\'d1\'f9\'d4\'da\'c0\'a8\'ba\'c5\'c7\'b0\'d3\'d0\'d2\'bb\'b8\'f6\'bf\'c9\'b1\'e6\'ca\'b6\'b5\'c4\'c3\'fb\'d7\'d6\'a3\'ac\'cb\'f9\'d4\'da\'d4\'da\'b5\'f7\'d3\'c3\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'b1\'a3\'ac\'d6\'f7\'d2\'aa\'cd\'a8\'b9\'fd\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'d0\'b5\'c4\'b2\'ce\'ca\'fd\'c3\'fb\'ba\'cd\'c0\'e0\'d0\'cd\'c0\'b4\'c8\'b7\'b6\'a8\'d0\'e8\'d2\'aa\'b5\'f7\'d3\'c3\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d5\'fd\'d2\'f2\'ce\'aa\'b2\'ce\'ca\'fd\'c8\'e7\'b4\'cb\'d6\'d8\'d2\'aa\'a3\'ac\'c8\'e7\'b9\'fb\'c4\'e3\'d4\'da\'b6\'a8\'d2\'e5\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'b1\'c3\'bb\'d3\'d0\'cc\'e1\'b9\'a9\'b2\'ce\'ca\'fd\'b5\'c4\'cd\'e2\'b2\'bf\'c3\'fb\'d7\'d6\'a3\'ac
\f0 Swift
\f1 \'bb\'e1\'ce\'aa\'c3\'bf\'b8\'f6\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'b2\'ce\'ca\'fd\'d7\'d4\'b6\'af\'c9\'fa\'b3\'c9\'d2\'bb\'b8\'f6\'b8\'fa\'c4\'da\'b2\'bf\'c3\'fb\'d7\'d6\'cf\'e0\'cd\'ac\'b5\'c4\'cd\'e2\'b2\'bf\'c3\'fb\'a3\'ac\'be\'cd\'cf\'e0\'b5\'b1\'d3\'da\'d4\'da\'c3\'bf\'b8\'f6\'b9\'b9\'d4\'ec\'b2\'ce\'ca\'fd\'d6\'ae\'c7\'b0\'bc\'d3\'c1\'cb\'d2\'bb\'b8\'f6\'b9\'fe\'cf\'a3\'b7\'fb\'ba\'c5
\f0 \
\

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'c8\'e7\'b9\'fb\'c4\'e3\'b2\'bb\'cf\'a3\'cd\'fb\'ce\'aa\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'c4\'b3\'b8\'f6\'b2\'ce\'ca\'fd\'cc\'e1\'b9\'a9\'cd\'e2\'b2\'bf\'c3\'fb\'d7\'d6\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'cf\'c2\'bb\'ae\'cf\'df
\f0 _
\f1 \'c0\'b4\'cf\'d4\'ca\'be\'c3\'e8\'ca\'f6\'cb\'fc\'b5\'c4\'cd\'e2\'b2\'bf\'c3\'fb\'a3\'ac\'d2\'d4\'b4\'cb\'b8\'b2\'b8\'c7\'c9\'cf\'c3\'e6\'cb\'f9\'cb\'b5\'b5\'c4\'c4\'ac\'c8\'cf\'d0\'d0\'ce\'aa\'a1\'a3
\f0 \
*/\
\
struct Color\
\{\
    let red = 0.0, green = 0.0, blue = 0.0\
    init(red: Double, green: Double, blue: Double)\
    \{\
        self.red = red\
        self.green = green\
        self.blue = blue  //? 
\f1 \'ce\'aa\'c9\'b6\'bf\'c9\'d2\'d4\'d0\'de\'b8\'c4\'b3\'a3\'c1\'bf
\f0 (let)
\f1 \'a3\'bf
\f0 \
        \
        //
\f1 \'bf\'c9\'d2\'d4\'d4\'da\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'d0\'de\'b8\'c4\'a1\'a3\'a1\'a3\'a1\'a3
\f0 \
    \}\
    \
    init(white: Double)\
    \{\
        red = white\
        green = white\
        blue = white\
    \}\
\}\
\
let magenta = Color(red: 1.0, green: 0.0, blue: 1.0)\
\
let halfGray = Color(white: 0.5)\
\
//
\f1 \'bf\'c9\'d1\'a1\'ca\'f4\'d0\'d4\'c0\'e0\'d0\'cd
\f0 \
/*\

\f1 \'c8\'e7\'b9\'fb\'c4\'e3\'b6\'a8\'d6\'c6\'b5\'c4\'c0\'e0\'d0\'cd\'b0\'fc\'c0\'a8\'d2\'bb\'b8\'f6\'c2\'df\'bc\'ad\'c9\'cf\'d4\'ca\'d0\'ed\'c8\'a1\'d6\'b5\'ce\'aa\'bf\'d5\'b5\'c4\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4
\f0 --
\f1 \'b2\'bb\'b9\'dc\'ca\'c7\'d2\'f2\'ce\'aa\'cb\'fb\'ce\'de\'b7\'a8\'d4\'da\'b3\'f5\'ca\'bc\'bb\'af\'b8\'b3\'d6\'b5\'a3\'ac\'bb\'b9\'ca\'c7\'d2\'f2\'ce\'aa\'cb\'fb\'bf\'c9\'d2\'d4\'d4\'da\'d6\'ae\'ba\'f3\'c4\'b3\'b8\'f6\'ca\'b1\'bc\'e4\'b5\'e3\'bf\'c9\'d2\'d4\'b8\'b3\'d6\'b5\'ce\'aa\'bf\'d5
\f0 --
\f1 \'c4\'e3\'b6\'bc\'bf\'c9\'d2\'d4\'bd\'ab\'cb\'fc\'b6\'a8\'d2\'e5\'ce\'aa\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd
\f0 optional type
\f1 \'a1\'a3\'bf\'c9\'d1\'a1\'c0\'e0\'d0\'cd\'b5\'c4\'ca\'f4\'d0\'d4\'bd\'ab\'d7\'d4\'b6\'af\'b3\'f5\'ca\'bc\'bb\'af\'ce\'aa\'bf\'d5
\f0 nil
\f1 \'a3\'ac\'b1\'ed\'ca\'be\'d5\'e2\'b8\'f6\'ca\'f4\'d0\'d4\'ca\'c7\'b9\'ca\'d2\'e2\'d4\'da\'b3\'f5\'ca\'bc\'bb\'af\'ca\'b1\'c9\'e8\'d6\'c3\'ce\'aa\'bf\'d5\'b5\'c4\'a1\'a3
\f0 \
*/\
\
class SurveyQuestion\
\{\
    var text: String\
    var response: String?\
    init(text: String)\
    \{\
        self.text = text\
    \}\
    \
    func ask()\
    \{\
        println(text)\
    \}\
\}\
\
let cheeseQuestion = SurveyQuestion(text: "Do you like cheese?")\
cheeseQuestion.ask()\
\
println(cheeseQuestion.response)\
cheeseQuestion.response = "Yes, I do like cheese."\
println(cheeseQuestion.response)\
\
//
\f1 \'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'b3\'a3\'c1\'bf\'ca\'f4\'d0\'d4\'b5\'c4\'d0\'de\'b8\'c4
\f0 \
/*\
   
\f1 \'d6\'bb\'d2\'aa\'d4\'da\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'bd\'e1\'ca\'f8\'c7\'b0\'b3\'a3\'c1\'bf\'b5\'c4\'d6\'b5\'c4\'dc\'c8\'b7\'b6\'a8\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'b5\'c4\'c8\'ce\'d2\'e2\'ca\'b1\'bc\'e4\'b5\'e3\'d0\'de\'b8\'c4\'b3\'a3\'c1\'bf\'ca\'f4\'d0\'d4\'b5\'c4\'d6\'b5\'a1\'a3
\f0 \
   
\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'b6\'d4\'c4\'b3\'b8\'f6\'c0\'e0\'ca\'b5\'c0\'fd\'c0\'b4\'bd\'b2\'a3\'ac\'cb\'fc\'b5\'c4\'b3\'a3\'c1\'bf\'ca\'f4\'d0\'d4\'d6\'bb\'c4\'dc\'d4\'da\'b6\'a8\'d2\'e5\'cb\'fc\'b5\'c4\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'d0\'de\'b8\'c4\'a3\'ac\'b2\'bb\'c4\'dc\'d4\'da\'d7\'d3\'c0\'e0\'d6\'d0\'d0\'de\'b8\'c4\'a1\'a3
\f0 \
*/\
\
//
\f1 \'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
/*\
Swift
\f1 \'bd\'ab\'ce\'aa\'cb\'f9\'d3\'d0\'ca\'f4\'d0\'d4\'d2\'d1\'cc\'e1\'b9\'a9\'c4\'ac\'c8\'cf\'d6\'b5\'c7\'d2\'d7\'d4\'c9\'ed\'c3\'bb\'d3\'d0\'b6\'a8\'d2\'e5\'c8\'ce\'ba\'ce\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'bd\'e1\'b9\'b9\'cc\'e5\'bb\'f2\'bb\'f9\'c0\'e0\'a3\'ac\'cc\'e1\'b9\'a9\'d2\'bb\'b8\'f6\'c4\'ac\'c8\'cf\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d5\'e2\'b8\'f6\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'bd\'ab\'bc\'f2\'b5\'a5\'b5\'c4\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'cb\'f9\'d3\'d0\'ca\'f4\'d0\'d4\'d6\'b5\'b6\'bc\'c9\'e8\'d6\'c3\'ce\'aa\'c4\'ac\'c8\'cf\'d6\'b5\'b5\'c4\'ca\'b5\'c0\'fd
\f0 \
*/\
class ShoppingListItem\
\{\
    var name: String?\
    var quantity = 1\
    var purchased = false\
\}\
\
var item = ShoppingListItem()\
\
//
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'b5\'c4\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
/*\
  
\f1 \'b3\'fd\'c9\'cf\'c3\'e6\'cc\'e1\'b5\'bd\'b5\'c4\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'c8\'e7\'b9\'fb\'bd\'e1\'b9\'b9\'cc\'e5\'b6\'d4\'cb\'f9\'d3\'d0\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'cc\'e1\'b9\'a9\'c1\'cb\'c4\'ac\'c8\'cf\'d6\'b5\'c7\'d2\'d7\'d4\'c9\'ed\'c3\'bb\'d3\'d0\'cc\'e1\'b9\'a9\'cc\'d8\'b6\'a8\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'cb\'fb\'c3\'c7\'c4\'dc\'d7\'d4\'b6\'af\'bb\'f1\'b5\'c3\'d2\'bb\'b8\'f6\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
  
\f1 \'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'c7\'d3\'c3\'c0\'b4\'b3\'f5\'ca\'bc\'bb\'af\'bd\'e1\'b9\'b9\'cc\'e5\'d0\'c2\'ca\'b5\'c0\'fd\'c0\'ef\'b3\'c9\'d4\'b1\'ca\'f4\'d0\'d4\'b5\'c4\'bf\'ec\'bd\'dd\'b7\'bd\'ca\'bd\'a1\'a3\'ce\'d2\'c3\'c7\'d4\'da\'b5\'f7\'d3\'c3\'d6\'f0\'d2\'bb\'b3\'c9\'d4\'b1\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'b1\'a3\'ac\'cd\'a8\'b9\'fd\'d3\'eb\'b3\'c9\'d4\'b1\'ca\'f4\'d0\'d4\'c3\'fb\'cf\'e0\'cd\'ac\'b5\'c4\'b2\'ce\'ca\'fd\'c3\'fb\'bd\'f8\'d0\'d0\'b4\'ab\'d6\'b5\'c0\'b4\'cd\'ea\'b3\'c9\'b6\'d4\'b3\'c9\'d4\'b1\'ca\'f4\'d0\'d4\'b5\'c4\'b3\'f8\'ca\'a6\'b8\'b3\'d6\'b5
\f0 \
*/\
\
struct Size_\
\{\
    var width = 0.0, height = 0.0\
\}\
let twoByTwo = Size_(width: 2.0, height: 2.0)\
\
//
\f1 \'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'b4\'fa\'c0\'ed
\f0 \
/*\
   
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'bf\'c9\'d2\'d4\'cd\'a8\'b9\'fd\'b5\'f7\'d3\'c3\'c6\'e4\'cb\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'cd\'ea\'b3\'c9\'ca\'b5\'c0\'fd\'b5\'c4\'b2\'bf\'b7\'d6\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'a1\'a3\'d5\'e2\'d2\'bb\'b9\'fd\'b3\'cc\'b3\'c6\'d6\'ae\'ce\'aa\'b9\'b9\'d4\'ec\'c6\'f7\'b4\'fa\'c0\'ed\'a3\'ac\'cb\'fc\'c4\'dc\'bc\'f5\'c9\'d9\'b6\'e0\'b8\'f6\'b9\'b9\'d4\'ec\'c6\'f7\'bc\'e4\'b5\'c4\'b4\'fa\'c2\'eb\'d6\'d8\'b8\'b4\'a1\'a3
\f0 \
   
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'b4\'fa\'c0\'ed\'b5\'c4\'ca\'b5\'cf\'d6\'b9\'e6\'d4\'f2\'ba\'cd\'d0\'ce\'ca\'bd\'d4\'da\'d6\'b5\'c0\'e0\'d0\'cd\'ba\'cd\'c0\'e0\'c0\'e0\'d0\'cd\'d6\'d0\'d3\'d0\'cb\'f9\'b2\'bb\'cd\'ac\'a1\'a3\'d6\'b5\'c0\'e0\'d0\'cd
\f0 (
\f1 \'bd\'e1\'b9\'b9\'cc\'e5\'ba\'cd\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd
\f0 )
\f1 \'b2\'bb\'d6\'a7\'b3\'d6\'bc\'cc\'b3\'d0\'a3\'ac\'cb\'f9\'d2\'d4\'b9\'b9\'d4\'ec\'c6\'f7\'b4\'fa\'c0\'ed\'b5\'c4\'b9\'fd\'b3\'cc\'cf\'e0\'b6\'d4\'bc\'f2\'b5\'a5\'a3\'ac\'d2\'f2\'ce\'aa\'cb\'fb\'c3\'c7\'d6\'bb\'c4\'dc\'b4\'fa\'c0\'ed\'c8\'ce\'ce\'f1\'b8\'f8\'b1\'be\'c9\'ed\'cc\'e1\'b9\'a9\'c6\'e4\'cb\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'c0\'e0\'d4\'f2\'b2\'bb\'cd\'ac\'a3\'ac\'cb\'fc\'bf\'c9\'d2\'d4\'bc\'cc\'b3\'d0\'d7\'d4\'c6\'e4\'cb\'fb\'c0\'e0\'a3\'ac\'d5\'e2\'d2\'e2\'ce\'b6\'d7\'c5\'c0\'e0\'d3\'d0\'d4\'f0\'c8\'ce\'b1\'a3\'d6\'a4\'c6\'e4\'cb\'f9\'d3\'d0\'bc\'cc\'b3\'d0\'b5\'c4\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'d4\'da\'b9\'b9\'d4\'ec\'ca\'b1\'d2\'b2\'c4\'dc\'d5\'fd\'c8\'b7\'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\'a1\'a3
\f0 \
   
\f1 \'b6\'d4\'d3\'da\'d6\'b5\'c0\'e0\'d0\'cd\'a3\'ac\'c4\'e3\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3
\f0 self.init
\f1 \'d4\'da\'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'d0\'d2\'fd\'d3\'c3\'c6\'e4\'cb\'fb\'b5\'c4\'ca\'f4\'d3\'da\'cf\'e0\'cd\'ac\'d6\'b5\'c0\'e0\'d0\'cd\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'b2\'a2\'c7\'d2\'c4\'e3\'d6\'bb\'c4\'dc\'d4\'da\'b9\'b9\'d4\'ec\'c6\'f7\'c4\'da\'b2\'bf\'b5\'f7\'d3\'c3
\f0 self.init\
\

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'c8\'e7\'b9\'fb\'c4\'e3\'ce\'aa\'c4\'b3\'b8\'f6\'d6\'b5\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'c4\'e3\'bd\'ab\'ce\'de\'b7\'a8\'b7\'c3\'ce\'ca\'b5\'bd\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7
\f0 (
\f1 \'c8\'e7\'b9\'fb\'ca\'c7\'bd\'e1\'b9\'b9\'cc\'e5\'a3\'ac\'d4\'f2\'ce\'de\'b7\'a8\'b7\'c3\'ce\'ca\'d6\'f0\'d2\'bb\'b6\'d4\'cf\'f3\'b9\'b9\'d4\'ec\'c6\'f7
\f0 )
\f1 \'a1\'a3\'d5\'e2\'b8\'f6\'cf\'de\'d6\'c6\'bf\'c9\'d2\'d4\'b7\'c0\'d6\'b9\'c4\'e3\'d4\'da\'ce\'aa\'d6\'b5\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'c1\'cb\'d2\'bb\'b8\'f6\'b8\'fc\'b8\'b4\'d4\'d3\'b5\'c4\'a3\'ac\'cd\'ea\'b3\'c9\'c1\'cb\'d6\'d8\'d2\'aa\'d7\'bc\'b1\'b8\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'ae\'ba\'f3\'a3\'ac\'b1\'f0\'c8\'cb\'bb\'b9\'ca\'c7\'b4\'ed\'ce\'bb\'b5\'c4\'ca\'b9\'d3\'c3\'c1\'cb\'c4\'c7\'b8\'f6\'d7\'d4\'b6\'af\'c9\'fa\'b3\'c9\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 \

\f1 \'d7\'a2\'d2\'e2\'a3\'ba\'c8\'e7\'b9\'fb\'c4\'e3\'cf\'e0\'cf\'eb\'cd\'a8\'b9\'fd\'c4\'ac\'c8\'cf\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a2\'d6\'f0\'d2\'bb\'b6\'d4\'cf\'f3\'b9\'b9\'d4\'ec\'c6\'f7\'d2\'d4\'bc\'b0\'c4\'e3\'d7\'d4\'bc\'ba\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'ce\'aa\'d6\'b5\'c0\'e0\'d0\'cd\'b9\'b9\'d4\'ec\'ca\'b5\'c0\'fd\'a3\'ac\'ce\'d2\'c3\'c7\'bd\'a8\'d2\'e9\'c4\'e3\'bd\'ab\'d7\'d4\'bc\'ba\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'cc\'e5\'d0\'b4\'b5\'bd\'c0\'a9\'d5\'b9
\f0 (extension)
\f1 \'d6\'d0\'a3\'ac\'b6\'f8\'b2\'bb\'ca\'c7\'b8\'fa\'d6\'b5\'c0\'e0\'d0\'cd\'b6\'a8\'d2\'e5\'bb\'ec\'d4\'da\'d2\'bb\'c6\'f0\'a1\'a3
\f0 \
*/\
\
struct Size\
\{\
    var width = 0.0, height = 0.0\
\}\
struct Point\
\{\
    var x = 0.0, y = 0.0\
\}\
\
struct Rect\
\{\
    var origin = Point()\
    var size = Size()\
    init()\
    \{\
        \
    \}\
    init(origin: Point, size: Size)\
    \{\
        self.origin = origin\
        self.size = size\
    \}\
    init(center: Point, size: Size)\
    \{\
        let originX = center.x - (size.width / 2)\
        let originY = center.y - (size.height / 2)\
        self.init(origin: Point(x: originX, y: originY),size: size) //
\f1 \'b4\'fa\'c0\'ed
\f0 \
    \}\
\}\
\
let basicRect = Rect()\
//basicRect
\f1 \'b5\'c4\'d4\'ad\'b5\'e3\'ca\'c7
\f0 (0.0,0.0),
\f1 \'b3\'df\'b4\'e7\'ca\'c7
\f0 (0.0,0.0)\
println(basicRect.size.width)\
\
let originRect = Rect(origin: Point(x: 2.0, y: 2.0), size: Size(width: 5.0, height: 5.0))\
//originRect
\f1 \'b5\'c4\'d4\'ad\'b5\'e3\'ca\'c7
\f0 (2.0,2.0),
\f1 \'b3\'df\'b4\'e7\'ca\'c7
\f0 (5.0,5.0)\
\
/*\

\f1 \'b5\'da\'c8\'fd\'b8\'f6
\f0 Rect
\f1 \'b9\'b9\'d4\'ec\'c6\'f7
\f0 init(center:size:)
\f1 \'c9\'d4\'ce\'a2\'b8\'b4\'d4\'d3\'d2\'bb\'b5\'e3\'a1\'a3\'cb\'fc\'cf\'c8\'cd\'a8\'b9\'fd
\f0 center
\f1 \'ba\'cd
\f0 size
\f1 \'bc\'c6\'cb\'e3\'b3\'f6
\f0 origin
\f1 \'b5\'c4\'d7\'f8\'b1\'ea\'a1\'a3\'c8\'bb\'ba\'f3\'d4\'d9\'b5\'f7\'d3\'c3
\f0 (
\f1 \'bb\'f2\'b4\'fa\'c0\'ed\'b8\'f8
\f0 )init(origin: Point, size: Size)
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'bd\'ab\'d0\'c2\'b5\'c4
\f0 origin
\f1 \'ba\'cd
\f0 size
\f1 \'d6\'b5\'b8\'b3\'d6\'b5\'b5\'bd\'b6\'d4\'d3\'a6\'b5\'c4\'ca\'f4\'d0\'d4\'d6\'d0
\f0 \
*/\
let centerRect = Rect(center: Point(x: 4.0, y: 4.0), size: Size(width: 3.0, height: 3.0))\
//centerRect
\f1 \'b5\'c4\'d4\'ad\'b5\'e3\'ca\'c7
\f0 (2.5,2.5),
\f1 \'b3\'df\'b4\'e7\'ca\'c7
\f0 (3.0,3.0)\
\
//
\f1 \'c0\'e0\'b5\'c4\'bc\'cc\'b3\'d0\'ba\'cd\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc
\f0 \
/*\
  
\f1 \'c0\'e0\'c0\'ef\'c3\'e6\'b5\'c4\'cb\'f9\'d3\'d0\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4
\f0 --
\f1 \'b0\'fc\'c0\'a8\'cb\'f9\'d3\'d0\'bc\'cc\'b3\'d0\'d7\'d4\'b8\'b8\'c0\'e0\'b5\'c4\'ca\'f4\'d0\'d4
\f0 --
\f1 \'b6\'bc\'d0\'e8\'d2\'aa\'d4\'da\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'d6\'d0\'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'d6\'b5
\f0 \
  Swift
\f1 \'cc\'e1\'b9\'a9\'c1\'cb\'c1\'bd\'d6\'d6\'c0\'e0\'d0\'cd\'b5\'c4\'c0\'e0\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'c8\'b7\'b1\'a3\'cb\'f9\'d3\'d0\'c0\'e0\'ca\'b5\'c0\'fd\'d4\'da\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'b6\'bc\'c4\'dc\'bb\'f1\'b5\'c3\'b3\'f5\'ca\'bc\'d6\'b5\'a3\'ac\'cb\'fb\'c3\'c7\'b7\'d6\'b1\'f0\'ca\'c7\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
*/\
\
//
\f1 \'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7
\f0 \
/*\
  
\f1 \'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'c7\'c0\'e0\'d6\'d0\'d7\'ee\'d6\'f7\'d2\'aa\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d2\'bb\'b8\'f6\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'bd\'ab\'b3\'f5\'ca\'bc\'bb\'af\'c0\'e0\'d6\'d0\'cc\'e1\'b9\'a9\'b5\'c4\'cb\'f9\'d3\'d0\'ca\'f4\'d0\'d4\'a3\'ac\'b2\'a2\'b8\'f9\'be\'dd\'b8\'b8\'c0\'e0\'c1\'b4\'cd\'f9\'c9\'cf\'b5\'f7\'d3\'c3\'b8\'b8\'c0\'e0\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'ca\'b5\'cf\'d6\'b8\'b8\'c0\'e0\'b5\'c4\'b3\'f5\'ca\'bc\'bb\'af\'a1\'a3
\f0 \
  
\f1 \'c3\'bf\'d2\'bb\'b8\'f6\'c0\'e0\'b6\'bc\'b1\'d8\'d0\'eb\'d6\'c1\'c9\'d9\'d3\'b5\'d3\'d0\'d2\'bb\'b8\'f6\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'d4\'da\'c4\'b3\'d0\'a9\'c7\'e9\'bf\'f6\'cf\'c2\'a3\'ac\'d0\'ed\'b6\'e0\'c0\'e0\'cd\'a8\'b9\'fd\'bc\'cc\'b3\'d0\'c1\'cb\'b8\'b8\'c0\'e0\'d6\'d0\'b5\'c4\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'c2\'fa\'d7\'e3\'d5\'e2\'b8\'f6\'cc\'f5\'bc\'fe\'a1\'a3
\f0 \
\
  
\f1 \'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'ca\'c7\'c0\'e0\'d6\'d0\'b1\'c8\'bd\'cf\'b4\'ce\'d2\'aa\'b5\'c4\'a3\'ac\'b8\'a8\'d6\'fa\'d0\'cd\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3\'c4\'e3\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'b5\'f7\'d3\'c3\'cd\'ac\'d2\'bb\'b8\'f6\'c0\'e0\'d6\'d0\'b5\'c4\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'b2\'a2\'ce\'aa\'c6\'e4\'b2\'ce\'ca\'fd\'cc\'e1\'b9\'a9\'c4\'ac\'c8\'cf\'d6\'b5\'a1\'a3\'c4\'e3\'d2\'b2\'bf\'c9\'d2\'d4\'b6\'a8\'d2\'e5\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'cc\'d8\'ca\'e2\'d3\'c3\'cd\'be\'bb\'f2\'cc\'d8\'b6\'a8\'ca\'e4\'c8\'eb\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3
\f0 \
  
\f1 \'c4\'e3\'d3\'a6\'b5\'b1\'d6\'bb\'d4\'da\'b1\'d8\'d2\'aa\'b5\'c4\'ca\'b1\'ba\'f2\'ce\'aa\'c0\'e0\'cc\'e1\'b9\'a9\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'b1\'c8\'b7\'bd\'cb\'b5\'c4\'b3\'d6\'d6\'c7\'e9\'bf\'f6\'cf\'c2\'cd\'a8\'b9\'fd\'ca\'b9\'d3\'c3\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'bf\'ec\'bd\'dd\'b5\'f7\'d3\'c3\'c4\'b3\'b8\'f6\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'a3\'ac\'c4\'dc\'b9\'bb\'bd\'da\'ca\'a1\'b8\'fc\'b6\'e0\'bf\'aa\'b7\'a2\'ca\'b1\'bc\'e4\'b2\'a2\'c8\'c3\'c0\'e0\'b5\'c4\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'b8\'fc\'c7\'e5\'ce\'fa\'c3\'f7\'c1\'cb\'a1\'a3
\f0 \
*/\
\
//
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'c1\'b4
\f0 \
/*\

\f1 \'ce\'aa\'c1\'cb\'bc\'f2\'bb\'af\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'ae\'bc\'e4\'b5\'c4\'b5\'f7\'d3\'c3\'b9\'d8\'cf\'b5\'a3\'ac
\f0 Swift
\f1 \'b2\'c9\'d3\'c3\'d2\'d4\'cf\'c2\'c8\'fd\'cc\'f5\'b9\'e6\'d4\'f2\'c0\'b4\'cf\'de\'d6\'c6\'b9\'b9\'d4\'ec\'c6\'f7\'d6\'ae\'bc\'e4\'b5\'c4\'b4\'fa\'c0\'ed\'b5\'f7\'d3\'c3
\f0 \

\f1 \'b9\'e6\'d4\'f2\'d2\'bb\'a3\'ba\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'b1\'d8\'d0\'eb\'b5\'f7\'d3\'c3\'c6\'e4\'d6\'b1\'bd\'d3\'b8\'b8\'c0\'e0\'b5\'c4\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 \

\f1 \'b9\'e6\'d4\'f2\'b6\'fe\'a3\'ba\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'b1\'d8\'d0\'eb\'b5\'f7\'d3\'c3\'cd\'ac\'d2\'bb\'b8\'f6\'c0\'e0\'b6\'a8\'d2\'e5\'b5\'c4\'c6\'e4\'cb\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 \

\f1 \'b9\'e6\'d4\'f2\'c8\'fd\'a3\'ba\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'b1\'d8\'d0\'eb\'d7\'ee\'d6\'d5\'d2\'d4\'b5\'f7\'d3\'c3\'d2\'bb\'b8\'f6\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'bd\'e1\'ca\'f8\'a1\'a3
\f0 \
*/\
\
//
\f1 \'c1\'bd\'b6\'ce\'ca\'bd\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc
\f0 \
/*\
Swift
\f1 \'d6\'d0\'c0\'e0\'b5\'c4\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'b0\'fc\'ba\'ac\'c1\'bd\'b8\'f6\'bd\'d7\'b6\'ce\'a1\'a3\'b5\'da\'d2\'bb\'b8\'f6\'bd\'d7\'b6\'ce\'a3\'ac\'c3\'bf\'b8\'f6\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'cd\'a8\'b9\'fd\'d2\'fd\'c8\'eb\'cb\'fb\'c3\'c7\'b5\'c4\'c0\'e0\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'c0\'b4\'c9\'e8\'d6\'c3\'b3\'f5\'ca\'bc\'d6\'b5\'a1\'a3\'b5\'b1\'c3\'bf\'d2\'bb\'b8\'f6\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'d6\'b5\'b1\'bb\'c8\'b7\'b6\'a8\'ba\'f3\'a3\'ac\'b5\'da\'b6\'fe\'b8\'f6\'bd\'d7\'b6\'ce\'bf\'aa\'ca\'bc\'a3\'ac\'cb\'fc\'b8\'f8\'c3\'bf\'b8\'f6\'c0\'e0\'d2\'bb\'b4\'ce\'bb\'fa\'bb\'e1\'d4\'da\'d0\'c2\'ca\'b5\'c0\'fd\'d7\'bc\'b1\'b8\'ca\'b9\'d3\'c3\'d6\'ae\'c7\'b0\'bd\'f8\'d2\'bb\'b2\'bd\'b6\'a8\'d6\'c6\'cb\'fb\'c3\'c7\'b5\'c4\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4
\f0 \

\f1 \'c1\'bd\'b6\'ce\'ca\'bd\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'b5\'c4\'ca\'b9\'d3\'c3\'c8\'c3\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'b8\'fc\'b0\'b2\'c8\'ab\'a3\'ac\'cd\'ac\'ca\'b1\'d4\'da\'d5\'fb\'b8\'f6\'c0\'e0\'b2\'e3\'bc\'b6\'bd\'e1\'b9\'b9\'d6\'d0\'b8\'f8\'d3\'e8\'c1\'cb\'c3\'bf\'b8\'f6\'c0\'e0\'cd\'ea\'d5\'fb\'b5\'c4\'c1\'e9\'bb\'ee\'d0\'d4\'a1\'a3\'c1\'bd\'b6\'ce\'ca\'bd\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc\'bf\'c9\'d2\'d4\'b7\'c0\'d6\'b9\'ca\'f4\'d0\'d4\'d6\'b5\'d4\'da\'b3\'f5\'ca\'bc\'bb\'af\'d6\'ae\'c7\'b0\'b1\'bb\'b7\'c3\'ce\'ca\'a3\'bb\'d2\'b2\'bf\'c9\'d2\'d4\'b7\'c0\'d6\'b9\'ca\'f4\'d0\'d4\'b1\'bb\'c1\'ed\'cd\'e2\'d2\'bb\'b8\'f6\'b9\'b9\'d4\'ec\'c6\'f7\'d2\'e2\'cd\'e2\'b5\'d8\'b8\'b3\'d3\'e8\'b2\'bb\'cd\'ac\'b5\'c4\'d6\'b5\'a1\'a3
\f0 \
*/\
\
//
\f1 \'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'bc\'cc\'b3\'d0\'ba\'cd\'d6\'d8\'d4\'d8
\f0 \
/*\

\f1 \'b8\'fa
\f0 objective-c
\f1 \'d6\'d0\'b5\'c4\'d7\'d3\'c0\'e0\'b2\'bb\'d2\'bb\'d1\'f9\'a3\'ac
\f0 Swift
\f1 \'d6\'d0\'b5\'c4\'d7\'d3\'c0\'e0\'b2\'bb\'bb\'e1\'c4\'ac\'c8\'cf\'bc\'cc\'b3\'d0\'b8\'b8\'c0\'e0\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 Swift
\f1 \'b5\'c4\'d5\'e2\'b8\'f6\'bb\'fa\'d6\'c6\'bf\'c9\'d2\'d4\'b7\'c0\'d6\'b9\'d2\'bb\'b8\'f6\'b8\'b8\'c0\'e0\'b5\'c4\'bc\'f2\'b5\'a5\'b9\'b9\'d4\'ec\'c6\'f7\'b1\'bb\'d2\'bb\'b8\'f6\'b8\'fc\'d7\'a8\'d2\'b5\'b5\'c4\'d7\'d3\'c0\'e0\'bc\'cc\'b3\'d0\'a3\'ac\'b2\'a2\'b1\'bb\'b4\'ed\'ce\'f3\'b5\'c4\'d3\'c3\'c0\'b4\'b4\'b4\'bd\'a8\'d7\'d3\'c0\'e0\'b5\'c4\'ca\'b5\'c0\'fd\'a1\'a3
\f0 \

\f1 \'bc\'d9\'c8\'e7\'c4\'e3\'cf\'a3\'cd\'fb\'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4\'d7\'d3\'c0\'e0\'d6\'d0\'c4\'dc\'ca\'b5\'cf\'d6\'d2\'bb\'b8\'f6\'bb\'f2\'b6\'e0\'b8\'f6\'b8\'fa\'b8\'b8\'c0\'e0\'cf\'e0\'cd\'ac\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7
\f0 --
\f1 \'d2\'b2\'d0\'ed\'ca\'c7\'ce\'aa\'c1\'cb\'cd\'ea\'b3\'c9\'d2\'bb\'d0\'a9\'b6\'a8\'d6\'c6\'b5\'c4\'b9\'b9\'d4\'ec\'b9\'fd\'b3\'cc
\f0 --
\f1 \'c4\'e3\'bf\'c9\'d2\'d4\'d4\'da\'c4\'e3\'b6\'a8\'d6\'c6\'b5\'c4\'d7\'d3\'c0\'e0\'d6\'d0\'cc\'e1\'b9\'a9\'ba\'cd\'d6\'d8\'d4\'d8\'d3\'eb\'b8\'b8\'c0\'e0\'cf\'e0\'cd\'ac\'b5\'c4\'b9\'b9\'d4\'ec\'c6\'f7\'a1\'a3
\f0 \
*/\
\
//
\f1 \'d7\'d4\'b6\'af\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'bc\'cc\'b3\'d0
\f0 \
\
//
\f1 \'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'ba\'cd\'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'d3\'ef\'b7\'a8
\f0 \
   //
\f1 \'c0\'e0\'b5\'c4\'d6\'b8\'b6\'a8\'b9\'b9\'d4\'ec\'c6\'f7\'b5\'c4\'d0\'b4\'b7\'a8\'ba\'cd\'d6\'b5\'c0\'e0\'d0\'cd\'bc\'f2\'b5\'a5\'b9\'b9\'d4\'ec\'c6\'f7\'d2\'bb\'d1\'f9
\f0 \
//    init(parameters)\
//    \{\
//        statement\
//    \}\
\
//
\f1 \'b1\'e3\'c0\'fb\'b9\'b9\'d4\'ec\'c6\'f7\'d2\'b2\'b2\'c9\'d3\'c3\'cf\'e0\'cd\'ac\'d1\'f9\'ca\'bd\'b5\'c4\'d0\'b4\'b7\'a8\'a3\'ac\'b5\'ab\'d0\'e8\'d2\'aa\'d4\'da
\f0 init
\f1 \'b9\'d8\'bc\'fc\'d7\'d6\'d6\'ae\'c7\'b0\'b7\'c5\'d6\'c3
\f0 convenient
\f1 \'b9\'d8\'bc\'fc\'d7\'d6\'a3\'ac\'b2\'a2\'ca\'b9\'d3\'c3\'bf\'d5\'b8\'f1\'bd\'ab\'cb\'fb\'c3\'c7\'c1\'a9\'b7\'d6\'bf\'aa\'a3\'ba
\f0 \
//    convenience init(parameters)\
//    \{\
//        statement\
//    \}\
\
class Food\
\{\
    var name: String\
    init(name: String)\
    \{\
        self.name = name\
    \}\
    \
    convenience init()\
    \{\
        self.init(name: "[Unnamed]")\
    \}\
\}\
\
let namedMeat = Food(name: "Bacon")\
\
let mysteryMeat = Food()\
\
class RecipeIngredient: Food\
\{\
    var quantity: Int\
    init(name: String,quantity: Int)\
    \{\
        self.quantity = quantity\
        super.init(name: name)\
    \}\
    \
    override convenience init(name: String)\
    \{\
        self.init(name: name, quantity: 1)\
    \}\
\}\
\
let oneMysteryItem = RecipeIngredient()\
let oneBacon = RecipeIngredient(name: "Bacon")\
let sixEggs = RecipeIngredient(name: "Eggs", quantity: 6)\
\
class ShoppinListItem: RecipeIngredient\
\{\
    var purchased = false\
    var description: String\
    \{\
        var output = "\\(quantity) x \\(name)  "\
        output += purchased ? "\uc0\u8730 ":"x"\
        return output\
    \}\
\}\
\
var breakfastList = [\
    ShoppinListItem(),\
    ShoppinListItem(name: "Bacon"),\
    ShoppinListItem(name: "Eggs", quantity: 6)\
]\
\
breakfastList[0].name = "Orange juice"\
breakfastList[0].purchased = true\
for item in breakfastList\
\{\
    println(item.description)\
\}\
\
//
\f1 \'cd\'a8\'b9\'fd\'b1\'d5\'b0\'fc\'ba\'cd\'ba\'af\'ca\'fd\'c0\'b4\'c9\'e8\'d6\'c3\'ca\'f4\'d0\'d4\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5
\f0 \
/*\

\f1 \'c8\'e7\'b9\'fb\'c4\'b3\'b8\'f6\'b4\'e6\'b4\'a2\'d0\'cd\'ca\'f4\'d0\'d4\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'d0\'e8\'d2\'aa\'cc\'d8\'b1\'f0\'b5\'c4\'b6\'a8\'d6\'c6\'bb\'f2\'d7\'bc\'b1\'b8\'a3\'ac\'c4\'e3\'be\'cd\'bf\'c9\'d2\'d4\'ca\'b9\'d3\'c3\'b1\'d5\'b0\'fc\'bb\'f2\'c8\'ab\'be\'d6\'b1\'e4\'c1\'bf\'c0\'b4\'ce\'aa\'c6\'e4\'ca\'f4\'d0\'d4\'cc\'e1\'b9\'a9\'b6\'a8\'d6\'c6\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'a1\'a3\'c3\'bf\'b5\'b1\'c4\'b3\'b8\'f6\'ca\'f4\'d0\'d4\'cb\'f9\'ca\'f4\'b5\'c4\'d0\'c2\'c0\'e0\'d0\'cd\'ca\'b5\'c0\'fd\'b4\'b4\'bd\'a8\'ca\'b1\'a3\'ac\'b6\'d4\'d3\'a6\'b5\'c4\'b1\'d5\'b0\'fc\'bb\'f2\'ba\'af\'ca\'fd\'bb\'e1\'b1\'bb\'b5\'f7\'d3\'c3\'a3\'ac\'b6\'f8\'cb\'fb\'c3\'c7\'b5\'c4\'b7\'b5\'bb\'d8\'d6\'b5\'bb\'e1\'b5\'b1\'d7\'f6\'c4\'ac\'c8\'cf\'d6\'b5\'b8\'b3\'d6\'b5\'b8\'f8\'d5\'e2\'b8\'f6\'ca\'f4\'d0\'d4\'b5\'c4
\f0 \
\

\f1 \'d5\'e2\'d6\'d6\'c0\'e0\'d0\'cd\'b5\'c4\'b1\'d5\'b0\'fc\'bb\'f2\'ba\'af\'ca\'fd\'d2\'bb\'b0\'e3\'bb\'e1\'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6\'b8\'fa\'ca\'f4\'d0\'d4\'c0\'e0\'d0\'cd\'cf\'e0\'cd\'ac\'b5\'c4\'c1\'d9\'ca\'b1\'b1\'e4\'c1\'bf\'a3\'ac\'c8\'bb\'ba\'f3\'d0\'de\'b8\'c4\'cb\'fb\'b5\'c4\'d6\'b5\'d2\'d4\'c2\'fa\'d7\'e3\'d4\'a4\'c6\'da\'b5\'c4\'b3\'f5\'ca\'bc\'d7\'b4\'cc\'ac\'a3\'ac\'d7\'ee\'ba\'f3\'bd\'ab\'d5\'e2\'b8\'f6\'c1\'d9\'ca\'b1\'b1\'e4\'c1\'bf\'b5\'c4\'d6\'b5\'d7\'f7\'ce\'aa\'ca\'f4\'d0\'d4\'b5\'c4\'c4\'ac\'c8\'cf\'d6\'b5\'bd\'f8\'d0\'d0\'b7\'b5\'bb\'d8\'a1\'a3
\f0 \
*/\
\
struct Checkerboard\
\{\
    let boardColors: [Bool] = \{\
        var temporaryBoard = [Bool]()\
        var isBlack = false\
        for i in 1...10\
        \{\
            for j in 1...10\
            \{\
                temporaryBoard.append(isBlack)\
                isBlack = !isBlack\
            \}\
            isBlack = !isBlack\
        \}\
        return temporaryBoard\
    \}()  //
\f1 \'b1\'d5\'b0\'fc
\f0 \
    \
    func squareIsBlackAtRow(row: Int, column: Int) -> Bool\
    \{\
        return boardColors[(row * 10) + column]\
    \}\
\}\
\
let board = Checkerboard()\
println(board.squareIsBlackAtRow(0, column: 1))\
println(board.squareIsBlackAtRow(9, column: 9))\
\
\
}